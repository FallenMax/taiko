[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Launches a browser with a tab. The browser will be closed when the parent node.js process is closed.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nNote : ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "end": {
                  "line": 2,
                  "column": 8,
                  "offset": 112
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "openBrowser",
              "position": {
                "start": {
                  "line": 2,
                  "column": 8,
                  "offset": 112
                },
                "end": {
                  "line": 2,
                  "column": 21,
                  "offset": 125
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " launches the browser in headless mode by default, but when ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 21,
                  "offset": 125
                },
                "end": {
                  "line": 2,
                  "column": 81,
                  "offset": 185
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "openBrowser",
              "position": {
                "start": {
                  "line": 2,
                  "column": 81,
                  "offset": 185
                },
                "end": {
                  "line": 2,
                  "column": 94,
                  "offset": 198
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is called from ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 94,
                  "offset": 198
                },
                "end": {
                  "line": 2,
                  "column": 110,
                  "offset": 214
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "repl",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "repl"
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 110,
                  "offset": 214
                },
                "end": {
                  "line": 2,
                  "column": 122,
                  "offset": 226
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " it launches the browser in headful mode.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 122,
                  "offset": 226
                },
                "end": {
                  "line": 2,
                  "column": 163,
                  "offset": 267
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 163,
              "offset": 267
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 163,
          "offset": 267
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await openBrowser({headless: false})\nawait openBrowser()\nawait openBrowser({args:['--window-size=1440,900']})\nawait openBrowser({args: [\n     '--disable-gpu',\n      '--disable-dev-shm-usage',\n      '--disable-setuid-sandbox',\n      '--no-first-run',\n      '--no-sandbox',\n      '--no-zygote']}) # These are recommended args that has to be passed when running in docker",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "eg. {headless: true|false, args:['--window-size=1440,900']}",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "options",
        "default": "{headless:true}"
      },
      {
        "title": "param",
        "description": "Option to open browser in headless/headful mode.",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.headless",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Args to open chromium. Refer https://peter.sh/experiments/chromium-command-line-switches/ for values.",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.args",
        "default": "[]"
      },
      {
        "title": "param",
        "description": "Remote host to connect to.",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.host",
        "default": "'127.0.0.1'"
      },
      {
        "title": "param",
        "description": "Remote debugging port, if not given connects to any open port.",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.port",
        "default": "0"
      },
      {
        "title": "param",
        "description": "Option to ignore certificate errors.",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.ignoreCertificateErrors",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Option to run each command after a delay. Useful to observe what is happening in the browser.",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.observe",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Option to modify delay time for observe mode. Accepts value in milliseconds.",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.observeTime",
        "default": "3000"
      },
      {
        "title": "param",
        "description": "Option to dump IO from browser.",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.dumpio",
        "default": "false"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 260,
        "column": 0
      },
      "end": {
        "line": 286,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 287,
          "column": 0
        },
        "end": {
          "line": 369,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openBrowser({headless: false})\nawait openBrowser()\nawait openBrowser({args:['--window-size=1440,900']})\nawait openBrowser({args: [\n     '--disable-gpu',\n      '--disable-dev-shm-usage',\n      '--disable-setuid-sandbox',\n      '--no-first-run',\n      '--no-sandbox',\n      '--no-zygote']}) # These are recommended args that has to be passed when running in docker"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "eg. {headless: true|false, args:",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "'--window-size=1440,900'",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "'--window-size=1440,900'",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 34,
                          "offset": 33
                        },
                        "end": {
                          "line": 1,
                          "column": 58,
                          "offset": 57
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{headless:true}",
        "properties": [
          {
            "title": "param",
            "name": "options.headless",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to open browser in headless/headful mode.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 49,
                          "offset": 48
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.args",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Args to open chromium. Refer ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://peter.sh/experiments/chromium-command-line-switches/",
                      "children": [
                        {
                          "type": "text",
                          "value": "https://peter.sh/experiments/chromium-command-line-switches/",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 30,
                              "offset": 29
                            },
                            "end": {
                              "line": 1,
                              "column": 90,
                              "offset": 89
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " for values.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "end": {
                          "line": 1,
                          "column": 102,
                          "offset": 101
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 102,
                  "offset": 101
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "[]"
          },
          {
            "title": "param",
            "name": "options.host",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Remote host to connect to.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 27,
                          "offset": 26
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'127.0.0.1'"
          },
          {
            "title": "param",
            "name": "options.port",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Remote debugging port, if not given connects to any open port.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 63,
                          "offset": 62
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 63,
                      "offset": 62
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "0"
          },
          {
            "title": "param",
            "name": "options.ignoreCertificateErrors",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to ignore certificate errors.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 37,
                          "offset": 36
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.observe",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to run each command after a delay. Useful to observe what is happening in the browser.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 94,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 94,
                  "offset": 93
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.observeTime",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify delay time for observe mode. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 77,
                          "offset": 76
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "3000"
          },
          {
            "title": "param",
            "name": "options.dumpio",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to dump IO from browser.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 32,
                          "offset": 31
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "openBrowser",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openBrowser",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".openBrowser"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the browser and along with all of its tabs.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 51,
          "offset": 50
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await closeBrowser()",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 371,
        "column": 0
      },
      "end": {
        "line": 378,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 379,
          "column": 0
        },
        "end": {
          "line": 383,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await closeBrowser()"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "closeBrowser",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeBrowser",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".closeBrowser"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Gives CRI client object (a wrapper around Chrome DevTools Protocol). Refer ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/cyrus-and/chrome-remote-interface",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/cyrus-and/chrome-remote-interface",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 76,
                      "offset": 75
                    },
                    "end": {
                      "line": 1,
                      "column": 128,
                      "offset": 127
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "end": {
                  "line": 1,
                  "column": 128,
                  "offset": 127
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nThis is useful while writing plugins or if use some API of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 128,
                  "offset": 127
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 187
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://chromedevtools.github.io/devtools-protocol/",
              "children": [
                {
                  "type": "text",
                  "value": "Chrome DevTools Protocol",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 61,
                      "offset": 188
                    },
                    "end": {
                      "line": 2,
                      "column": 85,
                      "offset": 212
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 60,
                  "offset": 187
                },
                "end": {
                  "line": 2,
                  "column": 139,
                  "offset": 266
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 2,
                  "column": 139,
                  "offset": 266
                },
                "end": {
                  "line": 2,
                  "column": 140,
                  "offset": 267
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 140,
              "offset": 267
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 140,
          "offset": 267
        }
      }
    },
    "tags": [
      {
        "title": "returns",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 461,
        "column": 0
      },
      "end": {
        "line": 466,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 467,
          "column": 0
        },
        "end": {
          "line": 467,
          "column": 42
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "client",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "client",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".client"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Allows switching between tabs using URL or page title or Open Window.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 70,
          "offset": 69
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "# switch using URL\nawait switchTo('https://taiko.dev')\n# switch using Title\nawait switchTo('Taiko')\n# switch using regex URL\nawait switchTo(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)\n# switch using regex Title\nawait switchTo(/Go*gle/)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "URL/Page title of the tab to switch.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "arg"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 469,
        "column": 0
      },
      "end": {
        "line": 485,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 487,
          "column": 0
        },
        "end": {
          "line": 517,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# switch using URL\nawait switchTo('https://taiko.dev')\n# switch using Title\nawait switchTo('Taiko')\n# switch using regex URL\nawait switchTo(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)\n# switch using regex Title\nawait switchTo(/Go*gle/)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "arg",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL/Page title of the tab to switch.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "switchTo",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "switchTo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".switchTo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Add interceptor for the network call. Helps in overriding request or to mock response of a network call.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 105,
              "offset": 104
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 105,
          "offset": 104
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "# case 1: block URL :\nawait intercept(url)\n# case 2: mockResponse :\nawait intercept(url, {mockObject})\n# case 3: override request :\nawait intercept(url, (request) => {request.continue({overrideObject})})\n# case 4: redirect always :\nawait intercept(url, redirectUrl)\n# case 5: mockResponse based on request :\nawait intercept(url, (request) => { request.respond({mockResponseObject}) })\n# case 6: block URL twice:\nawait intercept(url, undefined, 2)\n# case 7: mockResponse only 3 times :\nawait intercept(url, {mockObject}, 3)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "request URL to intercept",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "requestUrl"
      },
      {
        "title": "param",
        "description": "action to be done after interception. For more examples refer to https://github.com/getgauge/taiko/issues/98#issuecomment-42024186",
        "lineNumber": 20,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "function"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "option"
      },
      {
        "title": "param",
        "description": "number of times the request has to be intercepted . Optional parameter",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "count"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 519,
        "column": 0
      },
      "end": {
        "line": 543,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 544,
          "column": 0
        },
        "end": {
          "line": 551,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# case 1: block URL :\nawait intercept(url)\n# case 2: mockResponse :\nawait intercept(url, {mockObject})\n# case 3: override request :\nawait intercept(url, (request) => {request.continue({overrideObject})})\n# case 4: redirect always :\nawait intercept(url, redirectUrl)\n# case 5: mockResponse based on request :\nawait intercept(url, (request) => { request.respond({mockResponseObject}) })\n# case 6: block URL twice:\nawait intercept(url, undefined, 2)\n# case 7: mockResponse only 3 times :\nawait intercept(url, {mockObject}, 3)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "requestUrl",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "request URL to intercept",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "option",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "action to be done after interception. For more examples refer to ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://github.com/getgauge/taiko/issues/98#issuecomment-42024186",
                  "children": [
                    {
                      "type": "text",
                      "value": "https://github.com/getgauge/taiko/issues/98#issuecomment-42024186",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 66,
                          "offset": 65
                        },
                        "end": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "end": {
                      "line": 1,
                      "column": 131,
                      "offset": 130
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 131,
                  "offset": 130
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 131,
              "offset": 130
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "function"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "count",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of times the request has to be intercepted . Optional parameter",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 71,
                      "offset": 70
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 71,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 71,
              "offset": 70
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "intercept",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "intercept",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".intercept"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Activates emulation of network conditions.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 43,
          "offset": 42
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await emulateNetwork(\"Offline\")\nawait emulateNetwork(\"Good2G\")",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "'GPRS','Regular2G','Good2G','Good3G','Regular3G','Regular4G','DSL','WiFi, Offline'",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "networkType"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 553,
        "column": 0
      },
      "end": {
        "line": 563,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 565,
          "column": 0
        },
        "end": {
          "line": 569,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await emulateNetwork(\"Offline\")\nawait emulateNetwork(\"Good2G\")"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "networkType",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "'GPRS','Regular2G','Good2G','Good3G','Regular3G','Regular4G','DSL','WiFi, Offline'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 83,
              "offset": 82
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "emulateNetwork",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "emulateNetwork",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".emulateNetwork"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Overrides the values of device screen dimensions according to a predefined list of devices. To provide custom device dimensions, use setViewPort API.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 150,
                  "offset": 149
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 150,
              "offset": 149
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 150,
          "offset": 149
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await emulateDevice('iPhone 6')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "See [device model](https://github.com/getgauge/taiko/blob/master/lib/data/devices.js) for a list of all device models.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "deviceModel"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 571,
        "column": 0
      },
      "end": {
        "line": 580,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 582,
          "column": 0
        },
        "end": {
          "line": 582,
          "column": 45
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await emulateDevice('iPhone 6')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "deviceModel",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "See ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://github.com/getgauge/taiko/blob/master/lib/data/devices.js",
                  "children": [
                    {
                      "type": "text",
                      "value": "device model",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 6,
                          "offset": 5
                        },
                        "end": {
                          "line": 1,
                          "column": 18,
                          "offset": 17
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 86,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " for a list of all device models.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 86,
                      "offset": 85
                    },
                    "end": {
                      "line": 1,
                      "column": 119,
                      "offset": 118
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 119,
                  "offset": 118
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 119,
              "offset": 118
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "emulateDevice",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "emulateDevice",
        "scope": "static"
      }
    ],
    "namespace": ".emulateDevice"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Overrides the values of device screen dimensions",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 49,
          "offset": 48
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await setViewPort({width:600, height:800})",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "See [chrome devtools setDeviceMetricsOverride](https://chromedevtools.github.io/devtools-protocol/tot/Emulation#method-setDeviceMetricsOverride) for a list of options",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 600,
        "column": 0
      },
      "end": {
        "line": 609,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 610,
          "column": 0
        },
        "end": {
          "line": 617,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await setViewPort({width:600, height:800})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "See ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://chromedevtools.github.io/devtools-protocol/tot/Emulation#method-setDeviceMetricsOverride",
                  "children": [
                    {
                      "type": "text",
                      "value": "chrome devtools setDeviceMetricsOverride",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 6,
                          "offset": 5
                        },
                        "end": {
                          "line": 1,
                          "column": 46,
                          "offset": 45
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 145,
                      "offset": 144
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " for a list of options",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 145,
                      "offset": 144
                    },
                    "end": {
                      "line": 1,
                      "column": 167,
                      "offset": 166
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 167,
                  "offset": 166
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 167,
              "offset": 166
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setViewPort",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setViewPort",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".setViewPort"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Changes the timezone of the page. See ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "metaZones.txt",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "end": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nfor a list of supported timezone IDs.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 186,
                  "offset": 185
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 223
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 38,
              "offset": 223
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 38,
          "offset": 223
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await emulateTimezone('America/Jamaica')",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 619,
        "column": 0
      },
      "end": {
        "line": 624,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 626,
          "column": 0
        },
        "end": {
          "line": 629,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await emulateTimezone('America/Jamaica')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "timezoneId",
        "lineNumber": 626
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "emulateTimezone",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "emulateTimezone",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".emulateTimezone"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Launches a new tab. If url is provided, the new tab is opened with the url loaded.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 83,
              "offset": 82
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 83,
          "offset": 82
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await openTab('https://taiko.dev')\nawait openTab() # opens a blank tab.",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "Url of page to open in newly created tab.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "targetUrl",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the reload. Default navigation timeout is 5000 milliseconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click. Accepts value in milliseconds.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "5000"
      },
      {
        "title": "param",
        "description": "time to wait to check for occurrence of page load events. Accepts value in milliseconds.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Page load events to implicitly wait for. Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']]",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 631,
        "column": 0
      },
      "end": {
        "line": 645,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 646,
          "column": 0
        },
        "end": {
          "line": 676,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openTab('https://taiko.dev')\nawait openTab() # opens a blank tab."
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "targetUrl",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Url of page to open in newly created tab.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "default": "undefined"
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the reload. Default navigation timeout is 5000 milliseconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 105,
                          "offset": 104
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 105,
                          "offset": 104
                        },
                        "end": {
                          "line": 1,
                          "column": 135,
                          "offset": 134
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 135,
                          "offset": 134
                        },
                        "end": {
                          "line": 1,
                          "column": 139,
                          "offset": 138
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 139,
                          "offset": 138
                        },
                        "end": {
                          "line": 1,
                          "column": 148,
                          "offset": 147
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 148,
                          "offset": 147
                        },
                        "end": {
                          "line": 1,
                          "column": 159,
                          "offset": 158
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 159,
                      "offset": 158
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 100,
                          "offset": 99
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 100,
                      "offset": 99
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "5000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait to check for occurrence of page load events. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 89,
                          "offset": 88
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 89,
                  "offset": 88
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Page load events to implicitly wait for. Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 71,
                          "offset": 70
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 72,
                              "offset": 71
                            },
                            "end": {
                              "line": 1,
                              "column": 206,
                              "offset": 205
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 71,
                          "offset": 70
                        },
                        "end": {
                          "line": 1,
                          "column": 207,
                          "offset": 206
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "]",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 207,
                          "offset": 206
                        },
                        "end": {
                          "line": 1,
                          "column": 208,
                          "offset": 207
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 208,
                      "offset": 207
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 208,
                  "offset": 207
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "openTab",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openTab",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".openTab"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "deprecated",
        "description": "Use openIncognitoWindow\nOpens the specified URL in the browser's window. Adds `http` protocol to the URL if not present.",
        "lineNumber": 1
      },
      {
        "title": "example",
        "description": "await openWindow('https://google.com', { name: 'windowName' }) - Opens a Incognito window\nawait openWindow('https://google.com', { name: 'windowName', incognito: false }) - Opens normal window",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "URL to navigate page to.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Map with extra HTTP headers.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options.headers"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 678,
        "column": 0
      },
      "end": {
        "line": 693,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 694,
          "column": 0
        },
        "end": {
          "line": 722,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openWindow('https://google.com', { name: 'windowName' }) - Opens a Incognito window\nawait openWindow('https://google.com', { name: 'windowName', incognito: false }) - Opens normal window"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL to navigate page to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "end": {
                          "line": 1,
                          "column": 124,
                          "offset": 123
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 124,
                          "offset": 123
                        },
                        "end": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "end": {
                          "line": 1,
                          "column": 137,
                          "offset": 136
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 137,
                          "offset": 136
                        },
                        "end": {
                          "line": 1,
                          "column": 148,
                          "offset": 147
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 148,
                      "offset": 147
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 148,
                  "offset": 147
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.headers",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Map with extra HTTP headers.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 29,
                          "offset": 28
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "Object"
            }
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "deprecated": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Use openIncognitoWindow\nOpens the specified URL in the browser's window. Adds ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 55,
                  "offset": 78
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "http",
              "position": {
                "start": {
                  "line": 2,
                  "column": 55,
                  "offset": 78
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 84
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " protocol to the URL if not present.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 61,
                  "offset": 84
                },
                "end": {
                  "line": 2,
                  "column": 97,
                  "offset": 120
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 97,
              "offset": 120
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 97,
          "offset": 120
        }
      }
    },
    "name": "openWindow",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openWindow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".openWindow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Opens the specified URL in the browser's window. Adds ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "http",
              "position": {
                "start": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " protocol to the URL if not present.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "end": {
                  "line": 1,
                  "column": 97,
                  "offset": 96
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 97,
              "offset": 96
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 97,
          "offset": 96
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await openIncognitoWindow('https://google.com', { name: 'windowName' }) - Open a incognito window",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "URL to navigate page to.",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Map with extra HTTP headers.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options.headers"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 724,
        "column": 0
      },
      "end": {
        "line": 737,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 738,
          "column": 0
        },
        "end": {
          "line": 770,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openIncognitoWindow('https://google.com', { name: 'windowName' }) - Open a incognito window"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL to navigate page to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "end": {
                          "line": 1,
                          "column": 124,
                          "offset": 123
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 124,
                          "offset": 123
                        },
                        "end": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "end": {
                          "line": 1,
                          "column": 137,
                          "offset": 136
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 137,
                          "offset": 136
                        },
                        "end": {
                          "line": 1,
                          "column": 148,
                          "offset": 147
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 148,
                      "offset": 147
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 148,
                  "offset": 147
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.headers",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Map with extra HTTP headers.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 29,
                          "offset": 28
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "Object"
            }
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "openIncognitoWindow",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openIncognitoWindow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".openIncognitoWindow"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "deprecated",
        "description": "Use closeIncognitoWindow\nCloses the specified browser window.",
        "lineNumber": 1
      },
      {
        "title": "example",
        "description": "await closeWindow('windowName') - Closes a window with given arg",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 772,
        "column": 0
      },
      "end": {
        "line": 777,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 778,
          "column": 0
        },
        "end": {
          "line": 783,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await closeWindow('windowName') - Closes a window with given arg"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "arg",
        "lineNumber": 778
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "deprecated": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Use closeIncognitoWindow\nCloses the specified browser window.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 37,
                  "offset": 61
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 37,
              "offset": 61
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 37,
          "offset": 61
        }
      }
    },
    "name": "closeWindow",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeWindow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".closeWindow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the specified browser window.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 37,
          "offset": 36
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await closeIncognitoWindow('windowName') - Close incognito window",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "incognito window name",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "windowName"
      }
    ],
    "loc": {
      "start": {
        "line": 785,
        "column": 0
      },
      "end": {
        "line": 790,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 791,
          "column": 0
        },
        "end": {
          "line": 801,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await closeIncognitoWindow('windowName') - Close incognito window"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "arg",
        "lineNumber": 791
      },
      {
        "title": "param",
        "name": "windowName",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "incognito window name",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "closeIncognitoWindow",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeIncognitoWindow",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".closeIncognitoWindow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Closes the given tab with given URL or closes current tab.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 59,
              "offset": 58
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 59,
          "offset": 58
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "# Closes the current tab.\nawait closeTab()\n# Closes all the tabs with Title 'Open Source Test Automation Framework | Gauge'.\nawait closeTab('Open Source Test Automation Framework | Gauge')\n# Closes all the tabs with URL 'https://gauge.org'.\nawait closeTab('https://gauge.org')\n# Closes all the tabs with Regex Title 'Go*gle'\nawait closeTab(/Go*gle/)\n# Closes all the tabs with Regex URL '/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/'\nawait closeTab(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "URL/Page title of the tab to close.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "targetUrl",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 808,
        "column": 0
      },
      "end": {
        "line": 826,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 827,
          "column": 0
        },
        "end": {
          "line": 871,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# Closes the current tab.\nawait closeTab()\n# Closes all the tabs with Title 'Open Source Test Automation Framework | Gauge'.\nawait closeTab('Open Source Test Automation Framework | Gauge')\n# Closes all the tabs with URL 'https://gauge.org'.\nawait closeTab('https://gauge.org')\n# Closes all the tabs with Regex Title 'Go*gle'\nawait closeTab(/Go*gle/)\n# Closes all the tabs with Regex URL '/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/'\nawait closeTab(/http(s?):\\/\\/(www?).google.(com|co.in|co.uk)/)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "targetUrl",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL/Page title of the tab to close.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "default": "undefined"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "closeTab",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeTab",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".closeTab"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Override specific permissions to the given origin",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 50,
          "offset": 49
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await overridePermissions('http://maps.google.com',['geolocation']);",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "url origin to override permissions",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "origin"
      },
      {
        "title": "param",
        "description": "See [chrome devtools permission types](https://chromedevtools.github.io/devtools-protocol/tot/Browser/#type-PermissionType) for a list of permission types.",
        "lineNumber": 7,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "permissions"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 873,
        "column": 0
      },
      "end": {
        "line": 883,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 884,
          "column": 0
        },
        "end": {
          "line": 888,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await overridePermissions('http://maps.google.com',['geolocation']);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "origin",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "url origin to override permissions",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "permissions",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "See ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://chromedevtools.github.io/devtools-protocol/tot/Browser/#type-PermissionType",
                  "children": [
                    {
                      "type": "text",
                      "value": "chrome devtools permission types",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 6,
                          "offset": 5
                        },
                        "end": {
                          "line": 1,
                          "column": 38,
                          "offset": 37
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " for a list of permission types.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 124,
                      "offset": 123
                    },
                    "end": {
                      "line": 1,
                      "column": 156,
                      "offset": 155
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 156,
                  "offset": 155
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 156,
              "offset": 155
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "overridePermissions",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "overridePermissions",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".overridePermissions"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clears all permission overrides for all origins.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 49,
          "offset": 48
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await clearPermissionOverrides()",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 890,
        "column": 0
      },
      "end": {
        "line": 897,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 898,
          "column": 0
        },
        "end": {
          "line": 902,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await clearPermissionOverrides()"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clearPermissionOverrides",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clearPermissionOverrides",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clearPermissionOverrides"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sets a cookie with the given cookie data. It may overwrite equivalent cookie if it already exists.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 99,
              "offset": 98
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 99,
          "offset": 98
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await setCookie(\"CSRFToken\",\"csrfToken\", {url: \"http://the-internet.herokuapp.com\"})\nawait setCookie(\"CSRFToken\",\"csrfToken\", {domain: \"herokuapp.com\"})",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Cookie name.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Cookie value.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "sets cookie with the URL.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.url",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "sets cookie with the exact domain.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.domain",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "sets cookie with the exact path.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.path",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "True if cookie to be set is secure.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.secure",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "True if cookie to be set is http-only.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.httpOnly",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "Represents the cookie's 'SameSite' status: Refer https://tools.ietf.org/html/draft-west-first-party-cookies.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.sameSite",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "UTC time in seconds, counted from January 1, 1970. eg: 2019-02-16T16:55:45.529Z",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.expires",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 904,
        "column": 0
      },
      "end": {
        "line": 923,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 924,
          "column": 0
        },
        "end": {
          "line": 936,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await setCookie(\"CSRFToken\",\"csrfToken\", {url: \"http://the-internet.herokuapp.com\"})\nawait setCookie(\"CSRFToken\",\"csrfToken\", {domain: \"herokuapp.com\"})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cookie name.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cookie value.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.url",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "sets cookie with the URL.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 26,
                          "offset": 25
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.domain",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "sets cookie with the exact domain.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 35,
                          "offset": 34
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.path",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "sets cookie with the exact path.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 33,
                          "offset": 32
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.secure",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "True if cookie to be set is secure.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 36,
                          "offset": 35
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.httpOnly",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "True if cookie to be set is http-only.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 39,
                          "offset": 38
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.sameSite",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Represents the cookie's 'SameSite' status: Refer ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 50,
                          "offset": 49
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://tools.ietf.org/html/draft-west-first-party-cookies",
                      "children": [
                        {
                          "type": "text",
                          "value": "https://tools.ietf.org/html/draft-west-first-party-cookies",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 50,
                              "offset": 49
                            },
                            "end": {
                              "line": 1,
                              "column": 108,
                              "offset": 107
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 50,
                          "offset": 49
                        },
                        "end": {
                          "line": 1,
                          "column": 108,
                          "offset": 107
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ".",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 108,
                          "offset": 107
                        },
                        "end": {
                          "line": 1,
                          "column": 109,
                          "offset": 108
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 109,
                      "offset": 108
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.expires",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "UTC time in seconds, counted from January 1, 1970. eg: 2019-02-16T16:55:45.529Z",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 80,
                          "offset": 79
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 80,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 80,
                  "offset": 79
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "undefined"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setCookie",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setCookie",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".setCookie"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Deletes browser cookies with matching name and URL or domain/path pair. If cookie name is not given or empty, all browser cookies are deleted.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 143,
                  "offset": 142
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 143,
              "offset": 142
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 143,
          "offset": 142
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await deleteCookies() # clears all browser cookies\nawait deleteCookies(\"CSRFToken\", {url: \"http://the-internet.herokuapp.com\"})\nawait deleteCookies(\"CSRFToken\", {domain: \"herokuapp.com\"})",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Cookie name.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "cookieName",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "deletes all the cookies with the given name where domain and path match provided URL. eg: https://google.com",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.url",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "deletes only cookies with the exact domain. eg: google.com",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.domain",
        "default": "undefined"
      },
      {
        "title": "param",
        "description": "deletes only cookies with the exact path. eg: Google/Chrome/Default/Cookies/..",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.path",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 938,
        "column": 0
      },
      "end": {
        "line": 953,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 954,
          "column": 0
        },
        "end": {
          "line": 967,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await deleteCookies() # clears all browser cookies\nawait deleteCookies(\"CSRFToken\", {url: \"http://the-internet.herokuapp.com\"})\nawait deleteCookies(\"CSRFToken\", {domain: \"herokuapp.com\"})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "cookieName",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cookie name.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "default": "undefined"
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.url",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "deletes all the cookies with the given name where domain and path match provided URL. eg: ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 91,
                          "offset": 90
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://google.com",
                      "children": [
                        {
                          "type": "text",
                          "value": "https://google.com",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 91,
                              "offset": 90
                            },
                            "end": {
                              "line": 1,
                              "column": 109,
                              "offset": 108
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 91,
                          "offset": 90
                        },
                        "end": {
                          "line": 1,
                          "column": 109,
                          "offset": 108
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 109,
                      "offset": 108
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 109,
                  "offset": 108
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.domain",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "deletes only cookies with the exact domain. eg: google.com",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 59,
                          "offset": 58
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          },
          {
            "title": "param",
            "name": "options.path",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "deletes only cookies with the exact path. eg: Google/Chrome/Default/Cookies/..",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 79,
                          "offset": 78
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "undefined"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "deleteCookies",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "deleteCookies",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".deleteCookies"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Get browser cookies",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 20,
          "offset": 19
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await getCookies()\nawait getCookies({urls:['https://the-internet.herokuapp.com']})",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "The list of URLs for which applicable cookies will be fetched",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          }
        },
        "name": "options.urls",
        "default": "undefined"
      },
      {
        "title": "returns",
        "description": "Array of cookie objects",
        "lineNumber": 10,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 969,
        "column": 0
      },
      "end": {
        "line": 980,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 981,
          "column": 0
        },
        "end": {
          "line": 984,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await getCookies()\nawait getCookies({urls:['https://the-internet.herokuapp.com']})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.urls",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The list of URLs for which applicable cookies will be fetched",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 62,
                          "offset": 61
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "Array"
            },
            "default": "undefined"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of cookie objects",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "getCookies",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "getCookies",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".getCookies"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Overrides the Geolocation Position",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 35,
          "offset": 34
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await setLocation({ latitude: 27.1752868, longitude: 78.040009, accuracy:20 })",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Latitue, logitude and accuracy to set the location.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Mock latitude",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.latitude"
      },
      {
        "title": "param",
        "description": "Mock longitude",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.longitude"
      },
      {
        "title": "param",
        "description": "Mock accuracy",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.accuracy"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 986,
        "column": 0
      },
      "end": {
        "line": 998,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 999,
          "column": 0
        },
        "end": {
          "line": 1003,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await setLocation({ latitude: 27.1752868, longitude: 78.040009, accuracy:20 })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Latitue, logitude and accuracy to set the location.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.latitude",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Mock latitude",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          },
          {
            "title": "param",
            "name": "options.longitude",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Mock longitude",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 15,
                          "offset": 14
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          },
          {
            "title": "param",
            "name": "options.accuracy",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Mock accuracy",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setLocation",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setLocation",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".setLocation"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Opens the specified URL in the browser's tab. Adds ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "http",
              "position": {
                "start": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " protocol to the URL if not present.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "end": {
                  "line": 1,
                  "column": 94,
                  "offset": 93
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 94,
              "offset": 93
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 94,
          "offset": 93
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await goto('https://google.com')\nawait goto('google.com')\nawait goto({ navigationTimeout:10000, headers:{'Authorization':'Basic cG9zdG1hbjpwYXNzd29y2A=='}})",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "URL to navigate page to.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Map with extra HTTP headers.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options.headers"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1005,
        "column": 0
      },
      "end": {
        "line": 1021,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1022,
          "column": 0
        },
        "end": {
          "line": 1038,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await goto('https://google.com')\nawait goto('google.com')\nawait goto({ navigationTimeout:10000, headers:{'Authorization':'Basic cG9zdG1hbjpwYXNzd29y2A=='}})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "URL to navigate page to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goto. Default navigationTimeout is 30 seconds to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 94,
                          "offset": 93
                        },
                        "end": {
                          "line": 1,
                          "column": 124,
                          "offset": 123
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 124,
                          "offset": 123
                        },
                        "end": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "end": {
                          "line": 1,
                          "column": 137,
                          "offset": 136
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 137,
                          "offset": 136
                        },
                        "end": {
                          "line": 1,
                          "column": 148,
                          "offset": 147
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 148,
                      "offset": 147
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 148,
                  "offset": 147
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.headers",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Map with extra HTTP headers.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 29,
                          "offset": 28
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "Object"
            }
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "goto",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "goto",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".goto"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Reloads the page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 18,
          "offset": 17
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await reload('https://google.com')\nawait reload('https://google.com', { navigationTimeout: 10000 })",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "DEPRECATED URL to reload",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the reload. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Ignore Cache on reload - Default to false",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.ignoreCache",
        "default": "false"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1040,
        "column": 0
      },
      "end": {
        "line": 1055,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1056,
          "column": 0
        },
        "end": {
          "line": 1075,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await reload('https://google.com')\nawait reload('https://google.com', { navigationTimeout: 10000 })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "DEPRECATED URL to reload",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the reload. Default navigation timeout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 98,
                          "offset": 97
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 98,
                          "offset": 97
                        },
                        "end": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "end": {
                          "line": 1,
                          "column": 132,
                          "offset": 131
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 132,
                          "offset": 131
                        },
                        "end": {
                          "line": 1,
                          "column": 141,
                          "offset": 140
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 141,
                          "offset": 140
                        },
                        "end": {
                          "line": 1,
                          "column": 152,
                          "offset": 151
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 152,
                      "offset": 151
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 152,
                  "offset": 151
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.ignoreCache",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Ignore Cache on reload - Default to false",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 42,
                          "offset": 41
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "reload",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "reload",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".reload"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Mimics browser back button click functionality.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await goBack()",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goBack. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1077,
        "column": 0
      },
      "end": {
        "line": 1089,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1090,
          "column": 0
        },
        "end": {
          "line": 1096,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await goBack()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goBack. Default navigation timeout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 98,
                          "offset": 97
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 98,
                          "offset": 97
                        },
                        "end": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 128,
                          "offset": 127
                        },
                        "end": {
                          "line": 1,
                          "column": 132,
                          "offset": 131
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 132,
                          "offset": 131
                        },
                        "end": {
                          "line": 1,
                          "column": 141,
                          "offset": 140
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 141,
                          "offset": 140
                        },
                        "end": {
                          "line": 1,
                          "column": 152,
                          "offset": 151
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 152,
                      "offset": 151
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 152,
                  "offset": 151
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "goBack",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "goBack",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".goBack"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Mimics browser forward button click functionality.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 51,
          "offset": 50
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await goForward()",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the goForward. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts value in milliseconds.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1098,
        "column": 0
      },
      "end": {
        "line": 1110,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1111,
          "column": 0
        },
        "end": {
          "line": 1117,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await goForward()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the goForward. Default navigation timeout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 101,
                          "offset": 100
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 101,
                          "offset": 100
                        },
                        "end": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "end": {
                          "line": 1,
                          "column": 135,
                          "offset": 134
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 135,
                          "offset": 134
                        },
                        "end": {
                          "line": 1,
                          "column": 144,
                          "offset": 143
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 144,
                          "offset": 143
                        },
                        "end": {
                          "line": 1,
                          "column": 155,
                          "offset": 154
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 155,
                      "offset": 154
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 155,
                  "offset": 154
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts value in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ],
        "default": "{navigationTimeout:defaultConfig.navigationTimeout}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "goForward",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "goForward",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".goForward"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns page's title.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 22,
          "offset": 21
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await openBrowser();\nawait goto(\"www.google.com\");\nawait title(); # returns \"Google\"",
        "lineNumber": 2
      },
      {
        "title": "returns",
        "description": "The title of the current page.",
        "lineNumber": 7,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1153,
        "column": 0
      },
      "end": {
        "line": 1161,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1162,
          "column": 0
        },
        "end": {
          "line": 1168,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openBrowser();\nawait goto(\"www.google.com\");\nawait title(); # returns \"Google\""
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The title of the current page.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "title",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "title",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".title"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then clicks in the center of the element. If there's no element matching selector, the method throws an error.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 191,
                  "offset": 190
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 191,
              "offset": 190
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 191,
          "offset": 190
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click('Get Started')\nawait click(link('Get Started'))\nawait click({x : 170, y : 567})",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "A selector to search for element to click / coordinates of the elemets to click on. If there are multiple elements satisfying the selector, the first will be clicked.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "`left`, `right`, or `middle`.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.button",
        "default": "'left'"
      },
      {
        "title": "param",
        "description": "Number of times to click on the element.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.clickCount",
        "default": "1"
      },
      {
        "title": "param",
        "description": "Number of elements to loop through to match the element with given selector.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.elementsToMatch",
        "default": "10"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1271,
        "column": 0
      },
      "end": {
        "line": 1290,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1291,
          "column": 0
        },
        "end": {
          "line": 1291,
          "column": 29
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click('Get Started')\nawait click(link('Get Started'))\nawait click({x : 170, y : 567})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to click / coordinates of the elemets to click on. If there are multiple elements satisfying the selector, the first will be clicked.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 167,
                      "offset": 166
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 167,
                  "offset": 166
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 167,
              "offset": 166
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "end": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "end": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "end": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "end": {
                          "line": 1,
                          "column": 151,
                          "offset": 150
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 151,
                      "offset": 150
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.button",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "left",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 7,
                          "offset": 6
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 7,
                          "offset": 6
                        },
                        "end": {
                          "line": 1,
                          "column": 9,
                          "offset": 8
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "right",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 9,
                          "offset": 8
                        },
                        "end": {
                          "line": 1,
                          "column": 16,
                          "offset": 15
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", or ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 16,
                          "offset": 15
                        },
                        "end": {
                          "line": 1,
                          "column": 21,
                          "offset": 20
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "middle",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 21,
                          "offset": 20
                        },
                        "end": {
                          "line": 1,
                          "column": 29,
                          "offset": 28
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ".",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 29,
                          "offset": 28
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "'left'"
          },
          {
            "title": "param",
            "name": "options.clickCount",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of times to click on the element.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 41,
                          "offset": 40
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "1"
          },
          {
            "title": "param",
            "name": "options.elementsToMatch",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of elements to loop through to match the element with given selector.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 77,
                          "offset": 76
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "10"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts time in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 68,
                          "offset": 67
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ]
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 16,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "click",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "click",
        "scope": "static"
      }
    ],
    "namespace": ".click"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then double clicks the element. If there's no element matching selector, the method throws an error.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 181,
                  "offset": 180
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 181,
              "offset": 180
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 181,
          "offset": 180
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await doubleClick('Get Started')\nawait doubleClick(button('Get Started'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "A selector to search for element to click. If there are multiple elements satisfying the selector, the first will be double clicked.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1324,
        "column": 0
      },
      "end": {
        "line": 1337,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1338,
          "column": 0
        },
        "end": {
          "line": 1350,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await doubleClick('Get Started')\nawait doubleClick(button('Get Started'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to click. If there are multiple elements satisfying the selector, the first will be double clicked.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 133,
                      "offset": 132
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 133,
                  "offset": 132
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 133,
              "offset": 132
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 96,
                          "offset": 95
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 96,
                          "offset": 95
                        },
                        "end": {
                          "line": 1,
                          "column": 126,
                          "offset": 125
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 126,
                          "offset": 125
                        },
                        "end": {
                          "line": 1,
                          "column": 130,
                          "offset": 129
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 130,
                          "offset": 129
                        },
                        "end": {
                          "line": 1,
                          "column": 139,
                          "offset": 138
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 139,
                          "offset": 138
                        },
                        "end": {
                          "line": 1,
                          "column": 150,
                          "offset": 149
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 150,
                      "offset": 149
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 150,
                  "offset": 149
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          }
        ],
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 10,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "doubleClick",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "doubleClick",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".doubleClick"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then right clicks the element. If there's no element matching selector, the method throws an error.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 180,
                  "offset": 179
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 180,
              "offset": 179
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 180,
          "offset": 179
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await rightClick('Get Started')\nawait rightClick(text('Get Started'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be clicked.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "Click options.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1352,
        "column": 0
      },
      "end": {
        "line": 1364,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1365,
          "column": 0
        },
        "end": {
          "line": 1377,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await rightClick('Get Started')\nawait rightClick(text('Get Started'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be clicked.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 132,
                  "offset": 131
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 132,
              "offset": 131
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Click options.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 96,
                          "offset": 95
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 96,
                          "offset": 95
                        },
                        "end": {
                          "line": 1,
                          "column": 126,
                          "offset": 125
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 126,
                          "offset": 125
                        },
                        "end": {
                          "line": 1,
                          "column": 130,
                          "offset": 129
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 130,
                          "offset": 129
                        },
                        "end": {
                          "line": 1,
                          "column": 139,
                          "offset": 138
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 139,
                          "offset": 138
                        },
                        "end": {
                          "line": 1,
                          "column": 150,
                          "offset": 149
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 150,
                      "offset": 149
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 150,
                  "offset": 149
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          }
        ],
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 1365,
        "type": {
          "type": "RestType"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "rightClick",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "rightClick",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rightClick"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches the source element with given selector and moves it to given destination selector or moves for given distance. If there's no element matching selector, the method throws an error.\nDrag and drop of HTML5 draggable does not work as expected. Issue tracked here ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 80,
                  "offset": 267
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/getgauge/taiko/issues/279",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/getgauge/taiko/issues/279",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 80,
                      "offset": 267
                    },
                    "end": {
                      "line": 2,
                      "column": 124,
                      "offset": 311
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 80,
                  "offset": 267
                },
                "end": {
                  "line": 2,
                  "column": 124,
                  "offset": 311
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 124,
              "offset": 311
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 124,
          "offset": 311
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await dragAndDrop($(\"work\"),into($('work done')))\nawait dragAndDrop($(\"work\"),{up:10,down:10,left:10,right:10})",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Element to be Dragged",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "source"
      },
      {
        "title": "param",
        "description": "Element for dropping the dragged element",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "destination"
      },
      {
        "title": "param",
        "description": "Distance to be moved from position of source element",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "distance"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1379,
        "column": 0
      },
      "end": {
        "line": 1392,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1393,
          "column": 0
        },
        "end": {
          "line": 1414,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await dragAndDrop($(\"work\"),into($('work done')))\nawait dragAndDrop($(\"work\"),{up:10,down:10,left:10,right:10})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "source",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Element to be Dragged",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "destination",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Element for dropping the dragged element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "distance",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Distance to be moved from position of source element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "dragAndDrop",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dragAndDrop",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".dragAndDrop"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then hovers over the center of the element. If there's no element matching selector, the method throws an error.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 193,
                  "offset": 192
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 193,
              "offset": 192
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 193,
          "offset": 192
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await hover('Get Started')\nawait hover(link('Get Started'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be hovered.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      }
    ],
    "loc": {
      "start": {
        "line": 1457,
        "column": 0
      },
      "end": {
        "line": 1467,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1468,
          "column": 0
        },
        "end": {
          "line": 1492,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await hover('Get Started')\nawait hover(link('Get Started'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to right click. If there are multiple elements satisfying the selector, the first will be hovered.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 132,
                      "offset": 131
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 132,
                  "offset": 131
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 132,
              "offset": 131
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "hover",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "hover",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".hover"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector and focuses it. If there's no element matching selector, the method throws an error.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 128,
                  "offset": 127
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 128,
              "offset": 127
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 128,
          "offset": 127
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await focus(textBox('Username:'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "A selector of an element to focus. If there are multiple elements satisfying the selector, the first will be focused.",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      }
    ],
    "loc": {
      "start": {
        "line": 1494,
        "column": 0
      },
      "end": {
        "line": 1503,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1504,
          "column": 0
        },
        "end": {
          "line": 1514,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await focus(textBox('Username:'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to focus. If there are multiple elements satisfying the selector, the first will be focused.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 118,
                      "offset": 117
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 118,
              "offset": 117
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "focus",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "focus",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".focus"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Types the given text into the focused or given element.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 56,
          "offset": 55
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await write('admin', into('Username:'))\nawait write('admin', 'Username:')\nawait write('admin')",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "Text to type into the element.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "A selector of an element to write into.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "into"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Time to wait between key presses in milliseconds.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.delay",
        "default": "10"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Prevent given text from being written to log output.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.hideText",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1516,
        "column": 0
      },
      "end": {
        "line": 1534,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1535,
          "column": 0
        },
        "end": {
          "line": 1599,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await write('admin', into('Username:'))\nawait write('admin', 'Username:')\nawait write('admin')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text to type into the element.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "into",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to write into.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.delay",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Time to wait between key presses in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 50,
                          "offset": 49
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "10"
          },
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "end": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "end": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "end": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "end": {
                          "line": 1,
                          "column": 151,
                          "offset": 150
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 151,
                      "offset": 150
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start. Accepts time in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 60,
                          "offset": 59
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.hideText",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Prevent given text from being written to log output.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 53,
                          "offset": 52
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{delay:1}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "write",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "write",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".write"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clears the value of given selector. If no selector is given clears the current active element.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 95,
              "offset": 94
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 95,
          "offset": 94
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await clear()\nawait clear(textBox({placeholder:'Email'}))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "A selector to search for element to clear. If there are multiple elements satisfying the selector, the first will be cleared.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "selector"
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "Click options.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after clear. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1632,
        "column": 0
      },
      "end": {
        "line": 1647,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1648,
          "column": 0
        },
        "end": {
          "line": 1684,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await clear()\nawait clear(textBox({placeholder:'Email'}))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector to search for element to clear. If there are multiple elements satisfying the selector, the first will be cleared.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 126,
                      "offset": 125
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 126,
                  "offset": 125
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 126,
              "offset": 125
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "selector"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Click options.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after clear. Default navigation timeout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 93,
                          "offset": 92
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 93,
                          "offset": 92
                        },
                        "end": {
                          "line": 1,
                          "column": 123,
                          "offset": 122
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 123,
                          "offset": 122
                        },
                        "end": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "end": {
                          "line": 1,
                          "column": 136,
                          "offset": 135
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 136,
                          "offset": 135
                        },
                        "end": {
                          "line": 1,
                          "column": 147,
                          "offset": 146
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 147,
                      "offset": 146
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 147,
                  "offset": 146
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start. Accepts time in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 60,
                          "offset": 59
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clear",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clear",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clear"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Attaches a file to a file input element.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await attach('c:/abc.txt', to('Please select a file:'))\nawait attach('c:/abc.txt', 'Please select a file:')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "The path of the file to be attached.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "filepath"
      },
      {
        "title": "param",
        "description": "The file input element to which to attach the file.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "to"
      }
    ],
    "loc": {
      "start": {
        "line": 1698,
        "column": 0
      },
      "end": {
        "line": 1707,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1708,
          "column": 0
        },
        "end": {
          "line": 1728,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await attach('c:/abc.txt', to('Please select a file:'))\nawait attach('c:/abc.txt', 'Please select a file:')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "filepath",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The path of the file to be attached.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "to",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The file input element to which to attach the file.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "attach",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "attach",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".attach"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Presses the given keys.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 24,
          "offset": 23
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await press('Enter')\nawait press('a')\nawait press(['Shift', 'ArrowLeft', 'ArrowLeft'])",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Name of keys to press. See [USKeyboardLayout](https://github.com/getgauge/taiko/blob/master/lib/data/USKeyboardLayout.js) for a list of all key names.",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "keys"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "If specified, generates an input event with this text.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "options.text",
        "default": "\"\""
      },
      {
        "title": "param",
        "description": "Time to wait between keydown and keyup in milliseconds.",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.delay",
        "default": "0"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1730,
        "column": 0
      },
      "end": {
        "line": 1748,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1749,
          "column": 0
        },
        "end": {
          "line": 1753,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await press('Enter')\nawait press('a')\nawait press(['Shift', 'ArrowLeft', 'ArrowLeft'])"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "keys",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Name of keys to press. See ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://github.com/getgauge/taiko/blob/master/lib/data/USKeyboardLayout.js",
                  "children": [
                    {
                      "type": "text",
                      "value": "USKeyboardLayout",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 29,
                          "offset": 28
                        },
                        "end": {
                          "line": 1,
                          "column": 45,
                          "offset": 44
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 122,
                      "offset": 121
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " for a list of all key names.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 122,
                      "offset": 121
                    },
                    "end": {
                      "line": 1,
                      "column": 151,
                      "offset": 150
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 151,
              "offset": 150
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.text",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "If specified, generates an input event with this text.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 55,
                          "offset": 54
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "default": "\"\""
          },
          {
            "title": "param",
            "name": "options.delay",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Time to wait between keydown and keyup in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 56,
                          "offset": 55
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "0"
          },
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "end": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "end": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "end": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "end": {
                          "line": 1,
                          "column": 151,
                          "offset": 150
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 151,
                      "offset": 150
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "press",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "press",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".press"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Highlights the given element on the page by drawing a red rectangle around it. This is useful for debugging purposes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 118,
                  "offset": 117
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 118,
              "offset": 117
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 118,
          "offset": 117
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight('Get Started')\nawait highlight(link('Get Started'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "A selector of an element to highlight. If there are multiple elements satisfying the selector, the first will be highlighted.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1774,
        "column": 0
      },
      "end": {
        "line": 1785,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1786,
          "column": 0
        },
        "end": {
          "line": 1786,
          "column": 37
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight('Get Started')\nawait highlight(link('Get Started'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to highlight. If there are multiple elements satisfying the selector, the first will be highlighted.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 126,
                      "offset": 125
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 126,
                  "offset": 125
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 126,
              "offset": 125
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "highlight",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "highlight",
        "scope": "static"
      }
    ],
    "namespace": ".highlight"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clear all highlights marked using ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "highlight",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "highlight"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " on the current page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await clearHighlights();",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1823,
        "column": 0
      },
      "end": {
        "line": 1830,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1832,
          "column": 0
        },
        "end": {
          "line": 1841,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await clearHighlights();"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clearHighlights",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clearHighlights",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clearHighlights"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Performs the given mouse action on the given coordinates. This is useful in performing actions on canvas.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 106,
                  "offset": 105
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 106,
              "offset": 105
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 106,
          "offset": 105
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await mouseAction('press', {x:0,y:0})\nawait mouseAction('move', {x:9,y:9})\nawait mouseAction('release', {x:9,y:9})\nawait mouseAction($(\"#elementID\"),'press', {x:0,y:0})\nawait mouseAction($(\".elementClass\"),'move', {x:9,y:9})\nawait mouseAction($(\"testxpath\"),'release', {x:9,y:9})",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Action to be performed on the canvas",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "action"
      },
      {
        "title": "param",
        "description": "Coordinates of a point on canvas to perform the action.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "coordinates"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "time to wait for navigation to start. Accepts time in milliseconds.",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      }
    ],
    "loc": {
      "start": {
        "line": 1843,
        "column": 0
      },
      "end": {
        "line": 1861,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1862,
          "column": 0
        },
        "end": {
          "line": 1862,
          "column": 41
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await mouseAction('press', {x:0,y:0})\nawait mouseAction('move', {x:9,y:9})\nawait mouseAction('release', {x:9,y:9})\nawait mouseAction($(\"#elementID\"),'press', {x:0,y:0})\nawait mouseAction($(\".elementClass\"),'move', {x:9,y:9})\nawait mouseAction($(\"testxpath\"),'release', {x:9,y:9})"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "action",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to be performed on the canvas",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "coordinates",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Coordinates of a point on canvas to perform the action.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 30 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "end": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "end": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "end": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "end": {
                          "line": 1,
                          "column": 151,
                          "offset": 150
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 151,
                      "offset": 150
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "time to wait for navigation to start. Accepts time in milliseconds.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 68,
                          "offset": 67
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          }
        ]
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "mouseAction",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "mouseAction",
        "scope": "static"
      }
    ],
    "namespace": ".mouseAction"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls the page to the given element.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 39,
          "offset": 38
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollTo('Get Started')\nawait scrollTo(link('Get Started'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "A selector of an element to scroll to.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1909,
        "column": 0
      },
      "end": {
        "line": 1921,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1922,
          "column": 0
        },
        "end": {
          "line": 1932,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollTo('Get Started')\nawait scrollTo(link('Get Started'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A selector of an element to scroll to.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollTo",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollTo",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollTo"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls the page/element to the right.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 39,
          "offset": 38
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollRight()\nawait scrollRight(1000)\nawait scrollRight('Element containing text')\nawait scrollRight('Element containing text', 1000)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1980,
        "column": 0
      },
      "end": {
        "line": 1993,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1994,
          "column": 0
        },
        "end": {
          "line": 2010,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollRight()\nawait scrollRight(1000)\nawait scrollRight('Element containing text')\nawait scrollRight('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollRight",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollRight",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollRight"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls the page/element to the left.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 38,
          "offset": 37
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollLeft()\nawait scrollLeft(1000)\nawait scrollLeft('Element containing text')\nawait scrollLeft('Element containing text', 1000)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2012,
        "column": 0
      },
      "end": {
        "line": 2025,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2026,
          "column": 0
        },
        "end": {
          "line": 2042,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollLeft()\nawait scrollLeft(1000)\nawait scrollLeft('Element containing text')\nawait scrollLeft('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollLeft",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollLeft",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollLeft"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls up the page/element.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollUp()\nawait scrollUp(1000)\nawait scrollUp('Element containing text')\nawait scrollUp('Element containing text', 1000)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2044,
        "column": 0
      },
      "end": {
        "line": 2057,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2058,
          "column": 0
        },
        "end": {
          "line": 2074,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollUp()\nawait scrollUp(1000)\nawait scrollUp('Element containing text')\nawait scrollUp('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollUp",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollUp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollUp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scrolls down the page/element.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 31,
          "offset": 30
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await scrollDown()\nawait scrollDown(1000)\nawait scrollDown('Element containing text')\nawait scrollDown('Element containing text', 1000)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "selector"
              },
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "e",
        "default": "'Window'"
      },
      {
        "title": "param",
        "description": "Accept px in pixels",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "px"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2076,
        "column": 0
      },
      "end": {
        "line": 2089,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2090,
          "column": 0
        },
        "end": {
          "line": 2106,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await scrollDown()\nawait scrollDown(1000)\nawait scrollDown('Element containing text')\nawait scrollDown('Element containing text', 1000)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "e",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "default": "'Window'"
      },
      {
        "title": "param",
        "name": "px",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Accept px in pixels",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "100"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "scrollDown",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "scrollDown",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scrollDown"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Captures a screenshot of the page. Appends timeStamp to filename if no filepath given.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 87,
                  "offset": 86
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 87,
              "offset": 86
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 87,
          "offset": 86
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await screenshot()\nawait screenshot({path : 'screenshot.png'})\nawait screenshot({fullPage:true})\nawait screenshot(text('Images', toRightOf('gmail')))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "returns",
        "description": "Promise which resolves to buffer with captured screenshot if {encoding:'base64'} given.",
        "lineNumber": 12,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Buffer"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2108,
        "column": 0
      },
      "end": {
        "line": 2121,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2122,
          "column": 0
        },
        "end": {
          "line": 2135,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await screenshot()\nawait screenshot({path : 'screenshot.png'})\nawait screenshot({fullPage:true})\nawait screenshot(text('Images', toRightOf('gmail')))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Promise which resolves to buffer with captured screenshot if {encoding:'base64'} given.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 88,
                      "offset": 87
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Buffer"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "screenshot",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "screenshot",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".screenshot"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fetches an element with the given selector, scrolls it into view if needed, and then taps on the element. If there's no element matching selector, the method throws an error.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 175,
                  "offset": 174
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 175,
              "offset": 174
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 175,
          "offset": 174
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await tap('Gmail')\nawait tap(link('Gmail'))",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "selector"
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "- Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 10,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2137,
        "column": 0
      },
      "end": {
        "line": 2150,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2151,
          "column": 0
        },
        "end": {
          "line": 2189,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await tap('Gmail')\nawait tap(link('Gmail'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "selector"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "list",
                  "ordered": false,
                  "start": null,
                  "loose": false,
                  "children": [
                    {
                      "type": "listItem",
                      "loose": false,
                      "checked": null,
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 3,
                                  "offset": 2
                                },
                                "end": {
                                  "line": 1,
                                  "column": 99,
                                  "offset": 98
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "inlineCode",
                              "value": "{ navigationTimeout: 10000 }",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 99,
                                  "offset": 98
                                },
                                "end": {
                                  "line": 1,
                                  "column": 129,
                                  "offset": 128
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": " in ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 129,
                                  "offset": 128
                                },
                                "end": {
                                  "line": 1,
                                  "column": 133,
                                  "offset": 132
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "inlineCode",
                              "value": "options",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 133,
                                  "offset": 132
                                },
                                "end": {
                                  "line": 1,
                                  "column": 142,
                                  "offset": 141
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": " parameter.",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 142,
                                  "offset": 141
                                },
                                "end": {
                                  "line": 1,
                                  "column": 153,
                                  "offset": 152
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 3,
                              "offset": 2
                            },
                            "end": {
                              "line": 1,
                              "column": 153,
                              "offset": 152
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 153,
                          "offset": 152
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 153,
                      "offset": 152
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 166,
                      "offset": 165
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 166,
                  "offset": 165
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "relativeSelector"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "tap",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "tap",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".tap"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify elements on the web page via XPath or CSS selector and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 116,
                  "offset": 115
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 116,
              "offset": 115
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 116,
          "offset": 115
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight($(`//*[text()='text']`))\nawait $(`//*[text()='text']`).exists()\n$(`#id`,near('username'),below('login'))",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "XPath or CSS selector.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 8,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2191,
        "column": 0
      },
      "end": {
        "line": 2201,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2202,
          "column": 0
        },
        "end": {
          "line": 2214,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight($(`//*[text()='text']`))\nawait $(`//*[text()='text']`).exists()\n$(`#id`,near('username'),below('login'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "XPath or CSS selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "$",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "$",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".$"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify an image on a web page. This is done via the image's alt text or attribute and value pairs\nand proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 2,
                  "column": 25,
                  "offset": 155
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 25,
              "offset": 155
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 25,
          "offset": 155
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(image('alt'))\nawait image('alt').exists()\nawait image({id:'imageId'}).exists()\nawait image({id:'imageId'},below('text')).exists()\nawait image(below('text')).exists()",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "The image's alt text.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "alt"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2216,
        "column": 0
      },
      "end": {
        "line": 2231,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2232,
          "column": 0
        },
        "end": {
          "line": 2245,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(image('alt'))\nawait image('alt').exists()\nawait image({id:'imageId'}).exists()\nawait image({id:'imageId'},below('text')).exists()\nawait image(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 2232,
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "alt",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The image's alt text.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "image",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "image",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".image"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a link on a web page with text or attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 125,
                  "offset": 124
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 125,
              "offset": 124
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 125,
          "offset": 124
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link('Get Started'))\nawait link('Get Started').exists()\nawait link({id:'linkId'}).exists()\nawait link({id:'linkId'},below('text')).exists()\nawait link(below('text')).exists()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "The link text.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 12,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2247,
        "column": 0
      },
      "end": {
        "line": 2261,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2262,
          "column": 0
        },
        "end": {
          "line": 2274,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link('Get Started'))\nawait link('Get Started').exists()\nawait link({id:'linkId'}).exists()\nawait link({id:'linkId'},below('text')).exists()\nawait link(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 2262,
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "text",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The link text.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "link",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "link",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".link"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a list item (HTML ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "<li>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " element) on a web page with label or attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 153,
                  "offset": 152
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 153,
              "offset": 152
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 153,
          "offset": 152
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight(listItem('Get Started'))\nawait listItem('Get Started').exists()\nawait listItem({id:'listId'}).exists()\nawait listItem({id:'listItemId'},below('text')).exists()\nawait listItem(below('text')).exists()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "The label of the list item.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 12,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2276,
        "column": 0
      },
      "end": {
        "line": 2290,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2291,
          "column": 0
        },
        "end": {
          "line": 2302,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight(listItem('Get Started'))\nawait listItem('Get Started').exists()\nawait listItem({id:'listId'}).exists()\nawait listItem({id:'listItemId'},below('text')).exists()\nawait listItem(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label of the list item.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "listItem",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "listItem",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".listItem"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a button on a web page with label or attribute and value pairs and proximity selectors.\nTags button and input with type submit, reset and button are identified using this selector",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 2,
                  "column": 92,
                  "offset": 219
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 92,
              "offset": 219
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 92,
          "offset": 219
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight(button('Get Started'))\nawait button('Get Started').exists()\nawait button({id:'buttonId'}).exists()\nawait button({id:'buttonId'},below('text')).exists()\nawait button(below('text')).exists()",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "The button label.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2304,
        "column": 0
      },
      "end": {
        "line": 2319,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2320,
          "column": 0
        },
        "end": {
          "line": 2370,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight(button('Get Started'))\nawait button('Get Started').exists()\nawait button({id:'buttonId'}).exists()\nawait button({id:'buttonId'},below('text')).exists()\nawait button(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 2320,
        "default": "{}"
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The button label.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "button",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "button",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".button"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a file input field on a web page either with label or with attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 150,
                  "offset": 149
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 150,
              "offset": 149
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 150,
          "offset": 149
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await attach('file.txt', to(fileField('Please select a file:')))\nawait fileField('Please select a file:').exists()\nawait fileField({'id':'file'}).exists()\nawait fileField({id:'fileFieldId'},below('text')).exists()\nawait fileField(below('text')).exists()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the file input field.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 12,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2372,
        "column": 0
      },
      "end": {
        "line": 2386,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2387,
          "column": 0
        },
        "end": {
          "line": 2387,
          "column": 37
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await attach('file.txt', to(fileField('Please select a file:')))\nawait fileField('Please select a file:').exists()\nawait fileField({'id':'file'}).exists()\nawait fileField({id:'fileFieldId'},below('text')).exists()\nawait fileField(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the file input field.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "fileField",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "fileField",
        "scope": "static"
      }
    ],
    "namespace": ".fileField"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify time based input types ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "linkReference",
              "identifier": " date, datetime-local, month, time, week ",
              "referenceType": "shortcut",
              "children": [
                {
                  "type": "text",
                  "value": " date, datetime-local, month, time, week ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "end": {
                      "line": 1,
                      "column": 106,
                      "offset": 105
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " on a web page either with label\nor with attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 107,
                  "offset": 106
                },
                "end": {
                  "line": 2,
                  "column": 59,
                  "offset": 197
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 59,
              "offset": 197
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 59,
          "offset": 197
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await write('31082020', into(timeField('Birthday:')))\nawait timeField('Birthday:').select(new Date('2020-09-20'))\nawait timeField('Birthday:').exists()\nawait timeField({'id':'Birthday'}).exists()\nawait timeField({id:'Birthday'},below('text')).exists()\nawait timeField(below('text')).exists()",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the file input field.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 14,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2409,
        "column": 0
      },
      "end": {
        "line": 2425,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2426,
          "column": 0
        },
        "end": {
          "line": 2426,
          "column": 37
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await write('31082020', into(timeField('Birthday:')))\nawait timeField('Birthday:').select(new Date('2020-09-20'))\nawait timeField('Birthday:').exists()\nawait timeField({'id':'Birthday'}).exists()\nawait timeField({id:'Birthday'},below('text')).exists()\nawait timeField(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the file input field.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "timeField",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "timeField",
        "scope": "static"
      }
    ],
    "namespace": ".timeField"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " let you specify a value which must be no less than a given value, and no more than another given value,attribute and value pairs and proximity selectors.\nThis is typically represented using a slider or dial control rather than a text entry box like the number input type.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 2,
                  "column": 118,
                  "offset": 293
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 118,
              "offset": 293
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 118,
          "offset": 293
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await range({ id: 'range-1' }).select(10.81);\nawait range({ id: 'range-1' }).select('10');\nawait range({ id: 'range-1' }, below('head')).select(10);",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 10,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2454,
        "column": 0
      },
      "end": {
        "line": 2466,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2467,
          "column": 0
        },
        "end": {
          "line": 2467,
          "column": 29
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await range({ id: 'range-1' }).select(10.81);\nawait range({ id: 'range-1' }).select('10');\nawait range({ id: 'range-1' }, below('head')).select(10);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "range",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "range",
        "scope": "static"
      }
    ],
    "namespace": ".range"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you set color values on color picker on web page with attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 132,
                  "offset": 131
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 132,
              "offset": 131
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 132,
          "offset": 131
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await color({'id':'colorId'}).exists()\nawait color({id:'colorId'},below('text')).exists()\nawait color(below('text')).exists()\nawait color(below('text')).select('#f236cf')\nawait color({'id':'colorId'}).select('#f236cf')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 11,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2489,
        "column": 0
      },
      "end": {
        "line": 2502,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2504,
          "column": 0
        },
        "end": {
          "line": 2504,
          "column": 29
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await color({'id':'colorId'}).exists()\nawait color({id:'colorId'},below('text')).exists()\nawait color(below('text')).exists()\nawait color(below('text')).select('#f236cf')\nawait color({'id':'colorId'}).select('#f236cf')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "color",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "color",
        "scope": "static"
      }
    ],
    "namespace": ".color"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a table cell\non a web page with row and column and row values as options and locating table using proximity selectors,\nor table labels.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 3,
                  "column": 17,
                  "offset": 175
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 17,
              "offset": 175
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 17,
          "offset": 175
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "tableCell({row:1, col:1}, \"Table Caption\")\ntableCell({id:'myColumn'}).text()\ntableCell({row:1,col:3}).text()\nhighlight(tableCell({row:2, col:3}, \"Table Caption\"))\nhighlight(text(\"Table Cell 2\",above(tableCell({row:2, col:2}, \"Table Caption\"))))\nhighlight(text(\"Table Cell 1\",near(tableCell({row:1, col:1}, \"Table Caption\"))))\nclick(link(above(tableCell({row:4,col:1},\"Table Caption\"))))\nhighlight(link(above(tableCell({row:4,col:1},above(\"Code\")))))",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Pair of row and column like {row:1, col:3}",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "The Table Caption or any Table Header or Table ID.",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 19,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": "*",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2529,
        "column": 0
      },
      "end": {
        "line": 2550,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2551,
          "column": 0
        },
        "end": {
          "line": 2551,
          "column": 37
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "tableCell({row:1, col:1}, \"Table Caption\")\ntableCell({id:'myColumn'}).text()\ntableCell({row:1,col:3}).text()\nhighlight(tableCell({row:2, col:3}, \"Table Caption\"))\nhighlight(text(\"Table Cell 2\",above(tableCell({row:2, col:2}, \"Table Caption\"))))\nhighlight(text(\"Table Cell 1\",near(tableCell({row:1, col:1}, \"Table Caption\"))))\nclick(link(above(tableCell({row:4,col:1},\"Table Caption\"))))\nhighlight(link(above(tableCell({row:4,col:1},above(\"Code\")))))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pair of row and column like {row:1, col:3}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Table Caption or any Table Header or Table ID.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "*",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 2,
                  "offset": 1
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 2,
              "offset": 1
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapper"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "tableCell",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "tableCell",
        "scope": "static"
      }
    ],
    "namespace": ".tableCell"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a text field(input (with type text, password, url, search, number, email, tel), textarea and contenteditable fields)\non a web page either with label or with attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 2,
                  "column": 91,
                  "offset": 247
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 91,
              "offset": 247
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 91,
          "offset": 247
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await focus(textBox('Username:'))\nawait textBox('Username:').exists()\nawait textBox({id:'textBoxId'},below('text')).exists()\nawait textBox(below('text')).exists()",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the text field.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 12,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2621,
        "column": 0
      },
      "end": {
        "line": 2635,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2636,
          "column": 0
        },
        "end": {
          "line": 2636,
          "column": 33
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await focus(textBox('Username:'))\nawait textBox('Username:').exists()\nawait textBox({id:'textBoxId'},below('text')).exists()\nawait textBox(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the text field.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "textBox",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "textBox",
        "scope": "static"
      }
    ],
    "namespace": ".textBox"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a dropDown on a web page either with label or with attribute and value pairs and proximity selectors.\nAny value can be selected using value or text or index of the options.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 2,
                  "column": 71,
                  "offset": 212
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 71,
              "offset": 212
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 71,
          "offset": 212
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await dropDown('Vehicle:').select('Car')\nawait dropDown('Vehicle:').select({index:'0'}) - index starts from 0\nawait dropDown('Vehicle:').value()\nawait dropDown('Vehicle:').exists()\nawait dropDown({id:'dropDownId'},below('text')).exists()\nawait dropDown(below('text')).exists()",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the drop down.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 14,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2712,
        "column": 0
      },
      "end": {
        "line": 2728,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2729,
          "column": 0
        },
        "end": {
          "line": 2729,
          "column": 35
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await dropDown('Vehicle:').select('Car')\nawait dropDown('Vehicle:').select({index:'0'}) - index starts from 0\nawait dropDown('Vehicle:').value()\nawait dropDown('Vehicle:').exists()\nawait dropDown({id:'dropDownId'},below('text')).exists()\nawait dropDown(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the drop down.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "dropDown",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropDown",
        "scope": "static"
      }
    ],
    "namespace": ".dropDown"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a checkbox on a web page either with label or with attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 142,
                  "offset": 141
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 142,
              "offset": 141
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 142,
          "offset": 141
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await checkBox('Vehicle').check()\nawait checkBox('Vehicle').uncheck()\nawait checkBox('Vehicle').isChecked()\nawait checkBox('Vehicle').exists()\nawait checkBox({id:'checkBoxId'},below('text')).exists()\nawait checkBox(below('text')).exists()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the check box.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2748,
        "column": 0
      },
      "end": {
        "line": 2763,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2764,
          "column": 0
        },
        "end": {
          "line": 2786,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await checkBox('Vehicle').check()\nawait checkBox('Vehicle').uncheck()\nawait checkBox('Vehicle').isChecked()\nawait checkBox('Vehicle').exists()\nawait checkBox({id:'checkBoxId'},below('text')).exists()\nawait checkBox(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 2764
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the check box.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "checkBox",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "checkBox",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".checkBox"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify a radio button on a web page either with label or with attribute and value pairs and proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 146,
                  "offset": 145
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 146,
              "offset": 145
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 146,
          "offset": 145
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await radioButton('Vehicle').select()\nawait radioButton('Vehicle').deselect()\nawait radioButton('Vehicle').isSelected()\nawait radioButton('Vehicle').exists()\nawait radioButton({id:'radioButtonId'},below('text')).exists()\nawait radioButton(below('text')).exists()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "attrValuePairs"
      },
      {
        "title": "param",
        "description": "The label (human-visible name) of the radio button.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2788,
        "column": 0
      },
      "end": {
        "line": 2803,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2804,
          "column": 0
        },
        "end": {
          "line": 2827,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await radioButton('Vehicle').select()\nawait radioButton('Vehicle').deselect()\nawait radioButton('Vehicle').isSelected()\nawait radioButton('Vehicle').exists()\nawait radioButton({id:'radioButtonId'},below('text')).exists()\nawait radioButton(below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "attrValuePairs",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Pairs of attribute and value like {\"id\":\"name\",\"class\":\"class-name\"}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "_options",
        "lineNumber": 2804
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      },
      {
        "title": "param",
        "name": "label",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label (human-visible name) of the radio button.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "radioButton",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "radioButton",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".radioButton"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "selector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "selector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " lets you identify an element with text. Looks for exact match if not found does contains, accepts proximity selectors.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 141,
                  "offset": 140
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 141,
              "offset": 140
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 141,
          "offset": 140
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await highlight(text('Vehicle'))\nawait text('Vehicle').exists()\nawait text('Vehicle', below('text')).exists()\nawait text('Vehicle', { exactMatch: true }, below('text')).exists()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Text to match.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "text"
      },
      {
        "title": "param",
        "description": "Look for exact match, eg. { exactMatch: true | false }",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.exactMatch",
        "default": "true"
      },
      {
        "title": "param",
        "description": "Proximity selectors",
        "lineNumber": 10,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        },
        "name": "args"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2829,
        "column": 0
      },
      "end": {
        "line": 2841,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2842,
          "column": 0
        },
        "end": {
          "line": 2842,
          "column": 27
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await highlight(text('Vehicle'))\nawait text('Vehicle').exists()\nawait text('Vehicle', below('text')).exists()\nawait text('Vehicle', { exactMatch: true }, below('text')).exists()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text to match.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Proximity selectors",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "NameExpression",
            "name": "relativeSelector"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "ElementWrapperList"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "text",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "text",
        "scope": "static"
      }
    ],
    "namespace": ".text"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 66,
          "offset": 65
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", toLeftOf(\"name\"))\nawait write(textBox(\"first name\", toLeftOf(\"last name\"))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2855,
        "column": 0
      },
      "end": {
        "line": 2864,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2866,
          "column": 0
        },
        "end": {
          "line": 2879,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", toLeftOf(\"name\"))\nawait write(textBox(\"first name\", toLeftOf(\"last name\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 2,
                  "offset": 1
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 2,
              "offset": 1
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "toLeftOf",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toLeftOf",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".toLeftOf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 66,
          "offset": 65
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", toRightOf(\"name\"))\nawait write(textBox(\"last name\", toRightOf(\"first name\"))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2881,
        "column": 0
      },
      "end": {
        "line": 2890,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2892,
          "column": 0
        },
        "end": {
          "line": 2905,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", toRightOf(\"name\"))\nawait write(textBox(\"last name\", toRightOf(\"first name\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 2,
                  "offset": 1
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 2,
              "offset": 1
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "toRightOf",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toRightOf",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".toRightOf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 66,
          "offset": 65
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", above(\"name\"))\nawait write(textBox(\"name\", above(\"email\"))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2907,
        "column": 0
      },
      "end": {
        "line": 2916,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2918,
          "column": 0
        },
        "end": {
          "line": 2929,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", above(\"name\"))\nawait write(textBox(\"name\", above(\"email\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 2,
                  "offset": 1
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 2,
              "offset": 1
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "above",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "above",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".above"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 66,
          "offset": 65
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", below(\"name\"))\nawait write(textBox(\"email\", below(\"name\"))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2931,
        "column": 0
      },
      "end": {
        "line": 2940,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2942,
          "column": 0
        },
        "end": {
          "line": 2953,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", below(\"name\"))\nawait write(textBox(\"email\", below(\"name\"))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 2,
                  "offset": 1
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 2,
              "offset": 1
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "below",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "below",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".below"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Search relative HTML elements with this ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".\nAn element is considered nearer to a reference element,\nonly if the element offset is lesser than the 30px of the reference element in any direction.\nDefault offset is 30px to override set options = {offset:50}",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 4,
                  "column": 61,
                  "offset": 276
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 61,
              "offset": 276
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 61,
          "offset": 276
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await click(link(\"Block\", near(\"name\"))\nawait click(link(\"Block\", near(\"name\", {offset: 50}))",
        "lineNumber": 6
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 2955,
        "column": 0
      },
      "end": {
        "line": 2968,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2969,
          "column": 0
        },
        "end": {
          "line": 2988,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await click(link(\"Block\", near(\"name\"))\nawait click(link(\"Block\", near(\"name\", {offset: 50}))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 2969,
        "default": "{offset:30}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 2,
                  "offset": 1
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 2,
              "offset": 1
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "near",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "near",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".near"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss an ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "alert",
              "position": {
                "start": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " matching a text.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 50,
          "offset": 49
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "alert('Message', async () => await accept())\nalert('Message', async () => await dismiss())\n\n// Note: Taiko's `alert` listener has to be setup before the alert\n// displays on the page. For example, if clicking on a button\n// shows the alert, the Taiko script is\nalert('Message', async () => await accept())\nawait click('Show Alert')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Identify alert based on this message.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "message"
      },
      {
        "title": "param",
        "description": "Action to perform. accept/dismiss.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 2990,
        "column": 0
      },
      "end": {
        "line": 3005,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3006,
          "column": 0
        },
        "end": {
          "line": 3006,
          "column": 81
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "alert('Message', async () => await accept())\nalert('Message', async () => await dismiss())\n\n// Note: Taiko's `alert` listener has to be setup before the alert\n// displays on the page. For example, if clicking on a button\n// shows the alert, the Taiko script is\nalert('Message', async () => await accept())\nawait click('Show Alert')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "message",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Identify alert based on this message.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. accept/dismiss.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "alert",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "alert",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".alert"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "prompt",
              "position": {
                "start": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " matching a text.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nWrite into the ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "end": {
                  "line": 2,
                  "column": 16,
                  "offset": 65
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "prompt",
              "position": {
                "start": {
                  "line": 2,
                  "column": 16,
                  "offset": 65
                },
                "end": {
                  "line": 2,
                  "column": 24,
                  "offset": 73
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " with ",
              "position": {
                "start": {
                  "line": 2,
                  "column": 24,
                  "offset": 73
                },
                "end": {
                  "line": 2,
                  "column": 30,
                  "offset": 79
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "accept('Something')",
              "position": {
                "start": {
                  "line": 2,
                  "column": 30,
                  "offset": 79
                },
                "end": {
                  "line": 2,
                  "column": 51,
                  "offset": 100
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 2,
                  "column": 51,
                  "offset": 100
                },
                "end": {
                  "line": 2,
                  "column": 52,
                  "offset": 101
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 52,
              "offset": 101
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 52,
          "offset": 101
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "prompt('Message', async () => await accept('Something'))\nprompt('Message', async () => await dismiss())\n\n// Note: Taiko's `prompt` listener has to be setup before the prompt\n// displays on the page. For example, if clicking on a button\n// shows the prompt, the Taiko script is\nprompt('Message', async () => await accept('Something'))\nawait click('Show Prompt')",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Identify prompt based on this message.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "message"
      },
      {
        "title": "param",
        "description": "Action to perform. accept/dismiss.",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 3008,
        "column": 0
      },
      "end": {
        "line": 3024,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3025,
          "column": 0
        },
        "end": {
          "line": 3025,
          "column": 83
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "prompt('Message', async () => await accept('Something'))\nprompt('Message', async () => await dismiss())\n\n// Note: Taiko's `prompt` listener has to be setup before the prompt\n// displays on the page. For example, if clicking on a button\n// shows the prompt, the Taiko script is\nprompt('Message', async () => await accept('Something'))\nawait click('Show Prompt')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "message",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Identify prompt based on this message.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. accept/dismiss.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "prompt",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "prompt",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".prompt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "confirm",
              "position": {
                "start": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " popup matching a text.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 57,
          "offset": 56
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "confirm('Message', async () => await accept())\nconfirm('Message', async () => await dismiss())\n\n// Note: Taiko's `confirm` listener has to be setup before the confirm\n// popup displays on the page. For example, if clicking on a button\n// shows the confirm popup, the Taiko script is\nconfirm('Message', async () => await accept())\nawait click('Show Confirm')",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Identify confirm based on this message.",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "message"
      },
      {
        "title": "param",
        "description": "Action to perform. accept/dismiss.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 3027,
        "column": 0
      },
      "end": {
        "line": 3042,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3043,
          "column": 0
        },
        "end": {
          "line": 3043,
          "column": 85
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "confirm('Message', async () => await accept())\nconfirm('Message', async () => await dismiss())\n\n// Note: Taiko's `confirm` listener has to be setup before the confirm\n// popup displays on the page. For example, if clicking on a button\n// shows the confirm popup, the Taiko script is\nconfirm('Message', async () => await accept())\nawait click('Show Confirm')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "message",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Identify confirm based on this message.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. accept/dismiss.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "confirm",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "confirm",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".confirm"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Accept or dismiss a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "beforeunload",
              "position": {
                "start": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " popup.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            },
            {
              "type": "html",
              "value": "<br>",
              "position": {
                "start": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 46,
          "offset": 45
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "beforeunload(async () => await accept())\nbeforeunload(async () => await dismiss())\n\n// Note: Taiko's `beforeunload` listener can be setup anywhere in the\n// script. The listener will run when the popup displays on the page.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Action to perform. Accept/Dismiss.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 3045,
        "column": 0
      },
      "end": {
        "line": 3056,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3057,
          "column": 0
        },
        "end": {
          "line": 3057,
          "column": 81
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "beforeunload(async () => await accept())\nbeforeunload(async () => await dismiss())\n\n// Note: Taiko's `beforeunload` listener can be setup anywhere in the\n// script. The listener will run when the popup displays on the page."
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Action to perform. Accept/Dismiss.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "beforeunload",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "beforeunload",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".beforeunload"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Evaluates script on element matching the given selector.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 57,
          "offset": 56
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await evaluate(link(\"something\"), (element) => element.style.backgroundColor)\n\nawait evaluate((element) => {\n     element.style.backgroundColor = 'red';\n})\n\nawait evaluate(() => {\n  // Callback function have access to all DOM APIs available in the developer console.\n  return document.title;\n} )\n\nlet options = { args: [ '.main-content', {backgroundColor:'red'}]}\n\nawait evaluate(link(\"something\"), (element, args) => {\n     element.style.backgroundColor = args[1].backgroundColor;\n     element.querySelector(args[0]).innerText = 'Some thing';\n}, options)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 23,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "param",
        "description": "callback method to execute on the element or root HTML element when selector is not provided.<br>\nNOTE : In callback, we can access only inline css not the one which are define in css files.",
        "lineNumber": 24,
        "type": {
          "type": "NameExpression",
          "name": "function"
        },
        "name": "callback"
      },
      {
        "title": "param",
        "description": "options.",
        "lineNumber": 26,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass `{ navigationTimeout: 10000 }` in `options` parameter.",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      },
      {
        "title": "param",
        "description": "wait for navigation to start. Accepts value in milliseconds",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.waitForStart",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after click.",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "5000"
      },
      {
        "title": "param",
        "description": "Arguments to be passed to the provided callback.",
        "lineNumber": 30,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "options.args"
      },
      {
        "title": "param",
        "description": "Events available to wait for ['DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint']]",
        "lineNumber": 31,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "options.waitForEvents",
        "default": "['firstMeaningfulPaint']"
      },
      {
        "title": "returns",
        "description": "Object with return value of callback given",
        "lineNumber": 32,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3059,
        "column": 0
      },
      "end": {
        "line": 3092,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3093,
          "column": 0
        },
        "end": {
          "line": 3124,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await evaluate(link(\"something\"), (element) => element.style.backgroundColor)\n\nawait evaluate((element) => {\n     element.style.backgroundColor = 'red';\n})\n\nawait evaluate(() => {\n  // Callback function have access to all DOM APIs available in the developer console.\n  return document.title;\n} )\n\nlet options = { args: [ '.main-content', {backgroundColor:'red'}]}\n\nawait evaluate(link(\"something\"), (element, args) => {\n     element.style.backgroundColor = args[1].backgroundColor;\n     element.querySelector(args[0]).innerText = 'Some thing';\n}, options)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "callback",
        "lineNumber": 24,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "callback method to execute on the element or root HTML element when selector is not provided.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 94,
                      "offset": 93
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<br>",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 94,
                      "offset": 93
                    },
                    "end": {
                      "line": 1,
                      "column": 98,
                      "offset": 97
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\nNOTE : In callback, we can access only inline css not the one which are define in css files.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 98,
                      "offset": 97
                    },
                    "end": {
                      "line": 2,
                      "column": 93,
                      "offset": 190
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 93,
                  "offset": 190
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 93,
              "offset": 190
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "options.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 27,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after the click. Default navigation timeout is 15 seconds, to override pass ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{ navigationTimeout: 10000 }",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 97,
                          "offset": 96
                        },
                        "end": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " in ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 127,
                          "offset": 126
                        },
                        "end": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "options",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 131,
                          "offset": 130
                        },
                        "end": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " parameter.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 140,
                          "offset": 139
                        },
                        "end": {
                          "line": 1,
                          "column": 151,
                          "offset": 150
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 151,
                      "offset": 150
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 151,
                  "offset": 150
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          },
          {
            "title": "param",
            "name": "options.waitForStart",
            "lineNumber": 28,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "wait for navigation to start. Accepts value in milliseconds",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 60,
                          "offset": 59
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 29,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after click.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 69,
                          "offset": 68
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "5000"
          },
          {
            "title": "param",
            "name": "options.args",
            "lineNumber": 30,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Arguments to be passed to the provided callback.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 49,
                          "offset": 48
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "Array"
            }
          },
          {
            "title": "param",
            "name": "options.waitForEvents",
            "lineNumber": 31,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Events available to wait for ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "linkReference",
                      "identifier": "'domcontentloaded', 'loadeventfired', 'networkalmostidle', 'networkidle', 'firstpaint', 'firstcontentfulpaint', 'firstmeaningfulpaint'",
                      "referenceType": "shortcut",
                      "children": [
                        {
                          "type": "text",
                          "value": "'DOMContentLoaded', 'loadEventFired', 'networkAlmostIdle', 'networkIdle', 'firstPaint', 'firstContentfulPaint', 'firstMeaningfulPaint'",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 31,
                              "offset": 30
                            },
                            "end": {
                              "line": 1,
                              "column": 165,
                              "offset": 164
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "end": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "]",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 166,
                          "offset": 165
                        },
                        "end": {
                          "line": 1,
                          "column": 167,
                          "offset": 166
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 167,
                      "offset": 166
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 167,
                  "offset": 166
                }
              }
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            "default": "['firstMeaningfulPaint']"
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Object with return value of callback given",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "evaluate",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "evaluate",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".evaluate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used to improve the readability. It simply returns the parameter passed into it.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 98,
                  "offset": 97
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 98,
              "offset": 97
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 98,
          "offset": 97
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await attach('c:/abc.txt', to('Please select a file:'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "selector"
            }
          ]
        },
        "name": null,
        "errors": [
          "Missing or invalid tag name"
        ]
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "selector"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3126,
        "column": 0
      },
      "end": {
        "line": 3134,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3135,
          "column": 0
        },
        "end": {
          "line": 3135,
          "column": 37
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await attach('c:/abc.txt', to('Please select a file:'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 3135
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "selector"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "to",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "to",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".to"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used to improve the readability. It simply returns the parameter passed into it.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 98,
                  "offset": 97
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 98,
              "offset": 97
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 98,
          "offset": 97
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await write(\"user\", into('Username:'))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "selector"
            }
          ]
        },
        "name": null,
        "errors": [
          "Missing or invalid tag name"
        ]
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "selector"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3137,
        "column": 0
      },
      "end": {
        "line": 3145,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3146,
          "column": 0
        },
        "end": {
          "line": 3146,
          "column": 39
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await write(\"user\", into('Username:'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 3146
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "selector"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "into",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "into",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".into"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Action to perform on dialogs",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "prompt('Message', async () => await accept('Something'))",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 3189,
        "column": 0
      },
      "end": {
        "line": 3194,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3195,
          "column": 0
        },
        "end": {
          "line": 3201,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "prompt('Message', async () => await accept('Something'))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 3195,
        "default": "''"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "accept",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "accept",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".accept"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Action to perform on dialogs",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "prompt('Message', async () => await dismiss())",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 3203,
        "column": 0
      },
      "end": {
        "line": 3208,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3209,
          "column": 0
        },
        "end": {
          "line": 3214,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "prompt('Message', async () => await dismiss())"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "dismiss",
    "kind": "function",
    "async": true,
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dismiss",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".dismiss"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Lets you read the global configurations.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "getConfig(\"retryInterval\");",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Specifies the name of the configuration option/paramter you want to get (optional). If not specified, returns a shallow copy of the full global configuration.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "optionName"
      },
      {
        "title": "param",
        "description": "\"navigationTimeout\"] Navigation timeout value in milliseconds for navigation after performing",
        "lineNumber": 7,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"observeTime\"] Option to modify delay time in milliseconds for observe mode.",
        "lineNumber": 8,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"retryInterval\"] Option to modify delay time in milliseconds to retry the search of element existence.",
        "lineNumber": 9,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"retryTimeout\"] Option to modify timeout in milliseconds while retrying the search of element existence.",
        "lineNumber": 10,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"observe\"] Option to run each command after a delay. Useful to observe what is happening in the browser.",
        "lineNumber": 11,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"waitForNavigation\"] Wait for navigation after performing <a href=\"#goto\">goto</a>, <a href=\"#click\">click</a>,\n<a href=\"#doubleclick\">doubleClick</a>, <a href=\"#rightclick\">rightClick</a>, <a href=\"#write\">write</a>, <a href=\"#clear\">clear</a>,\n<a href=\"#press\">press</a> and <a href=\"#evaluate\">evaluate</a>.",
        "lineNumber": 12,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"ignoreSSLErrors\"] Option to ignore SSL errors encountered by the browser.",
        "lineNumber": 15,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"headful\"] Option to open browser in headless/headful mode.",
        "lineNumber": 16,
        "type": null,
        "name": "String"
      },
      {
        "title": "param",
        "description": "\"highlightOnAction\"] Option to highlight an element on action.",
        "lineNumber": 17,
        "type": null,
        "name": "String"
      }
    ],
    "loc": {
      "start": {
        "line": 3278,
        "column": 0
      },
      "end": {
        "line": 3296,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3297,
          "column": 0
        },
        "end": {
          "line": 3297,
          "column": 37
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "getConfig(\"retryInterval\");"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "optionName",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Specifies the name of the configuration option/paramter you want to get (optional). If not specified, returns a shallow copy of the full global configuration.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 159,
                      "offset": 158
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 159,
                  "offset": 158
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 159,
              "offset": 158
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"navigationTimeout\"] Navigation timeout value in milliseconds for navigation after performing",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 94,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 94,
                  "offset": 93
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 94,
              "offset": 93
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"observeTime\"] Option to modify delay time in milliseconds for observe mode.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 77,
                  "offset": 76
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 77,
              "offset": 76
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"retryInterval\"] Option to modify delay time in milliseconds to retry the search of element existence.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 103,
                      "offset": 102
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 103,
              "offset": 102
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"retryTimeout\"] Option to modify timeout in milliseconds while retrying the search of element existence.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 105,
                      "offset": 104
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 105,
              "offset": 104
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"observe\"] Option to run each command after a delay. Useful to observe what is happening in the browser.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 105,
                      "offset": 104
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 105,
                  "offset": 104
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 105,
              "offset": 104
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"waitForNavigation\"] Wait for navigation after performing ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#goto\">",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "end": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "goto",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "end": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 83,
                      "offset": 82
                    },
                    "end": {
                      "line": 1,
                      "column": 85,
                      "offset": 84
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#click\">",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 85,
                      "offset": 84
                    },
                    "end": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "click",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 102,
                      "offset": 101
                    },
                    "end": {
                      "line": 1,
                      "column": 107,
                      "offset": 106
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 107,
                      "offset": 106
                    },
                    "end": {
                      "line": 1,
                      "column": 111,
                      "offset": 110
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 111,
                      "offset": 110
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 112
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#doubleclick\">",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 112
                    },
                    "end": {
                      "line": 2,
                      "column": 24,
                      "offset": 135
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "doubleClick",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 24,
                      "offset": 135
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 146
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 146
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 150
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 150
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 152
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#rightclick\">",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 152
                    },
                    "end": {
                      "line": 2,
                      "column": 63,
                      "offset": 174
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "rightClick",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 63,
                      "offset": 174
                    },
                    "end": {
                      "line": 2,
                      "column": 73,
                      "offset": 184
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 73,
                      "offset": 184
                    },
                    "end": {
                      "line": 2,
                      "column": 77,
                      "offset": 188
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 77,
                      "offset": 188
                    },
                    "end": {
                      "line": 2,
                      "column": 79,
                      "offset": 190
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#write\">",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 79,
                      "offset": 190
                    },
                    "end": {
                      "line": 2,
                      "column": 96,
                      "offset": 207
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "write",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 96,
                      "offset": 207
                    },
                    "end": {
                      "line": 2,
                      "column": 101,
                      "offset": 212
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 101,
                      "offset": 212
                    },
                    "end": {
                      "line": 2,
                      "column": 105,
                      "offset": 216
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 105,
                      "offset": 216
                    },
                    "end": {
                      "line": 2,
                      "column": 107,
                      "offset": 218
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#clear\">",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 107,
                      "offset": 218
                    },
                    "end": {
                      "line": 2,
                      "column": 124,
                      "offset": 235
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "clear",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 124,
                      "offset": 235
                    },
                    "end": {
                      "line": 2,
                      "column": 129,
                      "offset": 240
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 129,
                      "offset": 240
                    },
                    "end": {
                      "line": 2,
                      "column": 133,
                      "offset": 244
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 133,
                      "offset": 244
                    },
                    "end": {
                      "line": 3,
                      "column": 1,
                      "offset": 246
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#press\">",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 246
                    },
                    "end": {
                      "line": 3,
                      "column": 18,
                      "offset": 263
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "press",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 18,
                      "offset": 263
                    },
                    "end": {
                      "line": 3,
                      "column": 23,
                      "offset": 268
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 23,
                      "offset": 268
                    },
                    "end": {
                      "line": 3,
                      "column": 27,
                      "offset": 272
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 27,
                      "offset": 272
                    },
                    "end": {
                      "line": 3,
                      "column": 32,
                      "offset": 277
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<a href=\"#evaluate\">",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 32,
                      "offset": 277
                    },
                    "end": {
                      "line": 3,
                      "column": 52,
                      "offset": 297
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "evaluate",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 52,
                      "offset": 297
                    },
                    "end": {
                      "line": 3,
                      "column": 60,
                      "offset": 305
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "</a>",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 60,
                      "offset": 305
                    },
                    "end": {
                      "line": 3,
                      "column": 64,
                      "offset": 309
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 64,
                      "offset": 309
                    },
                    "end": {
                      "line": 3,
                      "column": 65,
                      "offset": 310
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 65,
                  "offset": 310
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 65,
              "offset": 310
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"ignoreSSLErrors\"] Option to ignore SSL errors encountered by the browser.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 75,
                      "offset": 74
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"headful\"] Option to open browser in headless/headful mode.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        }
      },
      {
        "title": "param",
        "name": "String",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "\"highlightOnAction\"] Option to highlight an element on action.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 63,
                      "offset": 62
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            }
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "getConfig",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "getConfig",
        "scope": "static"
      }
    ],
    "namespace": ".getConfig"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Lets you configure global configurations.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "setConfig( { observeTime: 3000});",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Option to modify delay time in milliseconds for observe mode.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.observeTime",
        "default": "3000"
      },
      {
        "title": "param",
        "description": "Navigation timeout value in milliseconds for navigation after performing\n<a href=\"#opentab\">openTab</a>, <a href=\"#goto\">goto</a>, <a href=\"#reload\">reload</a>, <a href=\"#goback\">goBack</a>,\n<a href=\"#goforward\">goForward</a>, <a href=\"#click\">click</a>, <a href=\"#write\">write</a>, <a href=\"#clear\">clear</a>,\n<a href=\"#press\">press</a> and <a href=\"#evaluate\">evaluate</a>.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.navigationTimeout",
        "default": "30000"
      },
      {
        "title": "param",
        "description": "Option to modify delay time in milliseconds to retry the search of element existence.",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.retryInterval",
        "default": "100"
      },
      {
        "title": "param",
        "description": "Option to modify timeout in milliseconds while retrying the search of element existence.",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.retryTimeout",
        "default": "10000"
      },
      {
        "title": "param",
        "description": "Wait for navigation after performing <a href=\"#goto\">goto</a>, <a href=\"#click\">click</a>,\n<a href=\"#doubleclick\">doubleClick</a>, <a href=\"#rightclick\">rightClick</a>, <a href=\"#write\">write</a>, <a href=\"#clear\">clear</a>,\n<a href=\"#press\">press</a> and <a href=\"#evaluate\">evaluate</a>.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.waitForNavigation",
        "default": "true"
      }
    ],
    "loc": {
      "start": {
        "line": 3299,
        "column": 0
      },
      "end": {
        "line": 3316,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3317,
          "column": 0
        },
        "end": {
          "line": 3317,
          "column": 37
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "setConfig( { observeTime: 3000});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.observeTime",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify delay time in milliseconds for observe mode.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 62,
                          "offset": 61
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "3000"
          },
          {
            "title": "param",
            "name": "options.navigationTimeout",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Navigation timeout value in milliseconds for navigation after performing\n",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 2,
                          "column": 1,
                          "offset": 73
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#opentab\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 1,
                          "offset": 73
                        },
                        "end": {
                          "line": 2,
                          "column": 20,
                          "offset": 92
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "openTab",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 20,
                          "offset": 92
                        },
                        "end": {
                          "line": 2,
                          "column": 27,
                          "offset": 99
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 27,
                          "offset": 99
                        },
                        "end": {
                          "line": 2,
                          "column": 31,
                          "offset": 103
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 31,
                          "offset": 103
                        },
                        "end": {
                          "line": 2,
                          "column": 33,
                          "offset": 105
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goto\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 33,
                          "offset": 105
                        },
                        "end": {
                          "line": 2,
                          "column": 49,
                          "offset": 121
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "goto",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 49,
                          "offset": 121
                        },
                        "end": {
                          "line": 2,
                          "column": 53,
                          "offset": 125
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 53,
                          "offset": 125
                        },
                        "end": {
                          "line": 2,
                          "column": 57,
                          "offset": 129
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 57,
                          "offset": 129
                        },
                        "end": {
                          "line": 2,
                          "column": 59,
                          "offset": 131
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#reload\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 59,
                          "offset": 131
                        },
                        "end": {
                          "line": 2,
                          "column": 77,
                          "offset": 149
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "reload",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 77,
                          "offset": 149
                        },
                        "end": {
                          "line": 2,
                          "column": 83,
                          "offset": 155
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 83,
                          "offset": 155
                        },
                        "end": {
                          "line": 2,
                          "column": 87,
                          "offset": 159
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 87,
                          "offset": 159
                        },
                        "end": {
                          "line": 2,
                          "column": 89,
                          "offset": 161
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goback\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 89,
                          "offset": 161
                        },
                        "end": {
                          "line": 2,
                          "column": 107,
                          "offset": 179
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "goBack",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 107,
                          "offset": 179
                        },
                        "end": {
                          "line": 2,
                          "column": 113,
                          "offset": 185
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 113,
                          "offset": 185
                        },
                        "end": {
                          "line": 2,
                          "column": 117,
                          "offset": 189
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ",\n",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 117,
                          "offset": 189
                        },
                        "end": {
                          "line": 3,
                          "column": 1,
                          "offset": 191
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goforward\">",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 1,
                          "offset": 191
                        },
                        "end": {
                          "line": 3,
                          "column": 22,
                          "offset": 212
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "goForward",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 22,
                          "offset": 212
                        },
                        "end": {
                          "line": 3,
                          "column": 31,
                          "offset": 221
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 31,
                          "offset": 221
                        },
                        "end": {
                          "line": 3,
                          "column": 35,
                          "offset": 225
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 35,
                          "offset": 225
                        },
                        "end": {
                          "line": 3,
                          "column": 37,
                          "offset": 227
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#click\">",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 37,
                          "offset": 227
                        },
                        "end": {
                          "line": 3,
                          "column": 54,
                          "offset": 244
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "click",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 54,
                          "offset": 244
                        },
                        "end": {
                          "line": 3,
                          "column": 59,
                          "offset": 249
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 59,
                          "offset": 249
                        },
                        "end": {
                          "line": 3,
                          "column": 63,
                          "offset": 253
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 63,
                          "offset": 253
                        },
                        "end": {
                          "line": 3,
                          "column": 65,
                          "offset": 255
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#write\">",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 65,
                          "offset": 255
                        },
                        "end": {
                          "line": 3,
                          "column": 82,
                          "offset": 272
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "write",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 82,
                          "offset": 272
                        },
                        "end": {
                          "line": 3,
                          "column": 87,
                          "offset": 277
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 87,
                          "offset": 277
                        },
                        "end": {
                          "line": 3,
                          "column": 91,
                          "offset": 281
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 91,
                          "offset": 281
                        },
                        "end": {
                          "line": 3,
                          "column": 93,
                          "offset": 283
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#clear\">",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 93,
                          "offset": 283
                        },
                        "end": {
                          "line": 3,
                          "column": 110,
                          "offset": 300
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "clear",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 110,
                          "offset": 300
                        },
                        "end": {
                          "line": 3,
                          "column": 115,
                          "offset": 305
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 115,
                          "offset": 305
                        },
                        "end": {
                          "line": 3,
                          "column": 119,
                          "offset": 309
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ",\n",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 119,
                          "offset": 309
                        },
                        "end": {
                          "line": 4,
                          "column": 1,
                          "offset": 311
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#press\">",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 1,
                          "offset": 311
                        },
                        "end": {
                          "line": 4,
                          "column": 18,
                          "offset": 328
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "press",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 18,
                          "offset": 328
                        },
                        "end": {
                          "line": 4,
                          "column": 23,
                          "offset": 333
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 23,
                          "offset": 333
                        },
                        "end": {
                          "line": 4,
                          "column": 27,
                          "offset": 337
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " and ",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 27,
                          "offset": 337
                        },
                        "end": {
                          "line": 4,
                          "column": 32,
                          "offset": 342
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#evaluate\">",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 32,
                          "offset": 342
                        },
                        "end": {
                          "line": 4,
                          "column": 52,
                          "offset": 362
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "evaluate",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 52,
                          "offset": 362
                        },
                        "end": {
                          "line": 4,
                          "column": 60,
                          "offset": 370
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 60,
                          "offset": 370
                        },
                        "end": {
                          "line": 4,
                          "column": 64,
                          "offset": 374
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ".",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 64,
                          "offset": 374
                        },
                        "end": {
                          "line": 4,
                          "column": 65,
                          "offset": 375
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 4,
                      "column": 65,
                      "offset": 375
                    },
                    "indent": [
                      1,
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 65,
                  "offset": 375
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "30000"
          },
          {
            "title": "param",
            "name": "options.retryInterval",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify delay time in milliseconds to retry the search of element existence.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 86,
                          "offset": 85
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 86,
                      "offset": 85
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 86,
                  "offset": 85
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "100"
          },
          {
            "title": "param",
            "name": "options.retryTimeout",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Option to modify timeout in milliseconds while retrying the search of element existence.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 89,
                          "offset": 88
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 89,
                  "offset": 88
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "10000"
          },
          {
            "title": "param",
            "name": "options.waitForNavigation",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Wait for navigation after performing ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 38,
                          "offset": 37
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#goto\">",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 38,
                          "offset": 37
                        },
                        "end": {
                          "line": 1,
                          "column": 54,
                          "offset": 53
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "goto",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 54,
                          "offset": 53
                        },
                        "end": {
                          "line": 1,
                          "column": 58,
                          "offset": 57
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 58,
                          "offset": 57
                        },
                        "end": {
                          "line": 1,
                          "column": 62,
                          "offset": 61
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 62,
                          "offset": 61
                        },
                        "end": {
                          "line": 1,
                          "column": 64,
                          "offset": 63
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#click\">",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 64,
                          "offset": 63
                        },
                        "end": {
                          "line": 1,
                          "column": 81,
                          "offset": 80
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "click",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 81,
                          "offset": 80
                        },
                        "end": {
                          "line": 1,
                          "column": 86,
                          "offset": 85
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 86,
                          "offset": 85
                        },
                        "end": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ",\n",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 90,
                          "offset": 89
                        },
                        "end": {
                          "line": 2,
                          "column": 1,
                          "offset": 91
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#doubleclick\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 1,
                          "offset": 91
                        },
                        "end": {
                          "line": 2,
                          "column": 24,
                          "offset": 114
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "doubleClick",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 24,
                          "offset": 114
                        },
                        "end": {
                          "line": 2,
                          "column": 35,
                          "offset": 125
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 35,
                          "offset": 125
                        },
                        "end": {
                          "line": 2,
                          "column": 39,
                          "offset": 129
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 39,
                          "offset": 129
                        },
                        "end": {
                          "line": 2,
                          "column": 41,
                          "offset": 131
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#rightclick\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 41,
                          "offset": 131
                        },
                        "end": {
                          "line": 2,
                          "column": 63,
                          "offset": 153
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "rightClick",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 63,
                          "offset": 153
                        },
                        "end": {
                          "line": 2,
                          "column": 73,
                          "offset": 163
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 73,
                          "offset": 163
                        },
                        "end": {
                          "line": 2,
                          "column": 77,
                          "offset": 167
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 77,
                          "offset": 167
                        },
                        "end": {
                          "line": 2,
                          "column": 79,
                          "offset": 169
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#write\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 79,
                          "offset": 169
                        },
                        "end": {
                          "line": 2,
                          "column": 96,
                          "offset": 186
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "write",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 96,
                          "offset": 186
                        },
                        "end": {
                          "line": 2,
                          "column": 101,
                          "offset": 191
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 101,
                          "offset": 191
                        },
                        "end": {
                          "line": 2,
                          "column": 105,
                          "offset": 195
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 105,
                          "offset": 195
                        },
                        "end": {
                          "line": 2,
                          "column": 107,
                          "offset": 197
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#clear\">",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 107,
                          "offset": 197
                        },
                        "end": {
                          "line": 2,
                          "column": 124,
                          "offset": 214
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "clear",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 124,
                          "offset": 214
                        },
                        "end": {
                          "line": 2,
                          "column": 129,
                          "offset": 219
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 129,
                          "offset": 219
                        },
                        "end": {
                          "line": 2,
                          "column": 133,
                          "offset": 223
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ",\n",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 133,
                          "offset": 223
                        },
                        "end": {
                          "line": 3,
                          "column": 1,
                          "offset": 225
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#press\">",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 1,
                          "offset": 225
                        },
                        "end": {
                          "line": 3,
                          "column": 18,
                          "offset": 242
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "press",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 18,
                          "offset": 242
                        },
                        "end": {
                          "line": 3,
                          "column": 23,
                          "offset": 247
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 23,
                          "offset": 247
                        },
                        "end": {
                          "line": 3,
                          "column": 27,
                          "offset": 251
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " and ",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 27,
                          "offset": 251
                        },
                        "end": {
                          "line": 3,
                          "column": 32,
                          "offset": 256
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "<a href=\"#evaluate\">",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 32,
                          "offset": 256
                        },
                        "end": {
                          "line": 3,
                          "column": 52,
                          "offset": 276
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "evaluate",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 52,
                          "offset": 276
                        },
                        "end": {
                          "line": 3,
                          "column": 60,
                          "offset": 284
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "html",
                      "value": "</a>",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 60,
                          "offset": 284
                        },
                        "end": {
                          "line": 3,
                          "column": 64,
                          "offset": 288
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ".",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 64,
                          "offset": 288
                        },
                        "end": {
                          "line": 3,
                          "column": 65,
                          "offset": 289
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 3,
                      "column": 65,
                      "offset": 289
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 65,
                  "offset": 289
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "true"
          }
        ]
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "setConfig",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setConfig",
        "scope": "static"
      }
    ],
    "namespace": ".setConfig"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Removes interceptor for the provided URL or all interceptors if no URL is specified",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 84,
                  "offset": 83
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 84,
              "offset": 83
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 84,
          "offset": 83
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "# case 1: Remove intercept for a single  URL :\nawait clearIntercept(requestUrl)\n# case 2: Reset intercept for all URL :\nawait clearIntercept()",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "request URL to intercept. Optional parameters",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "requestUrl"
      }
    ],
    "loc": {
      "start": {
        "line": 3625,
        "column": 0
      },
      "end": {
        "line": 3635,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3636,
          "column": 0
        },
        "end": {
          "line": 3648,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "# case 1: Remove intercept for a single  URL :\nawait clearIntercept(requestUrl)\n# case 2: Reset intercept for all URL :\nawait clearIntercept()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "requestUrl",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "request URL to intercept. Optional parameters",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "clearIntercept",
    "kind": "function",
    "memberof": "taiko",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "clearIntercept",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clearIntercept"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns window's current URL.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 30,
          "offset": 29
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "await openBrowser();\nawait goto(\"www.google.com\");\nawait currentURL(); # returns \"https://www.google.com/?gws_rd=ssl\"",
        "lineNumber": 2
      },
      {
        "title": "returns",
        "description": "The URL of the current window.",
        "lineNumber": 7,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1137,
        "column": 0
      },
      "end": {
        "line": 1145,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1146,
          "column": 0
        },
        "end": {
          "line": 1150,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "await openBrowser();\nawait goto(\"www.google.com\");\nawait currentURL(); # returns \"https://www.google.com/?gws_rd=ssl\""
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The URL of the current window.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "currentURL",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "currentURL",
        "kind": "constant"
      }
    ],
    "namespace": "currentURL"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used to wait for number of milliseconds given or a given element or a given condition.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 104,
                  "offset": 103
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 104,
              "offset": 103
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 104,
          "offset": 103
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "waitFor(5000)\nwaitFor(\"1 item in cart\")\nwaitFor(\"Order Created\", 2000)\nwaitFor(async () => !(await $(\"loading-text\").exists()))",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Element/condition to wait for",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "element"
      },
      {
        "title": "param",
        "description": "Time to wait. default to 10s",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "time"
            }
          ]
        },
        "name": "time"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "promise"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3148,
        "column": 0
      },
      "end": {
        "line": 3160,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3162,
          "column": 0
        },
        "end": {
          "line": 3185,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "waitFor(5000)\nwaitFor(\"1 item in cart\")\nwaitFor(\"Order Created\", 2000)\nwaitFor(async () => !(await $(\"loading-text\").exists()))"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "element",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Element/condition to wait for",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "time",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Time to wait. default to 10s",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "time"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "promise"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "waitFor",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "waitFor",
        "kind": "constant"
      }
    ],
    "namespace": "waitFor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Starts a REPL when taiko is invoked as a runner with ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "--load",
              "position": {
                "start": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " option.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 70,
          "offset": 69
        }
      }
    },
    "tags": [
      {
        "title": "name",
        "description": null,
        "lineNumber": 2,
        "name": "repl"
      },
      {
        "title": "example",
        "description": "import { repl } from 'taiko/recorder';\nawait repl();",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "taiko --load script.js",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 3216,
        "column": 0
      },
      "end": {
        "line": 3226,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3235,
          "column": 0
        },
        "end": {
          "line": 3235,
          "column": 24
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import { repl } from 'taiko/recorder';\nawait repl();"
      },
      {
        "description": "taiko --load script.js"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "repl",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "repl"
      }
    ],
    "namespace": "repl"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function is used by taiko to initiate the plugin.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 55,
          "offset": 54
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "unique id or name of the plugin",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "ID"
      },
      {
        "title": "param",
        "description": "callback method to set taiko instance for plugin",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Function"
        },
        "name": "init"
      }
    ],
    "loc": {
      "start": {
        "line": 3228,
        "column": 0
      },
      "end": {
        "line": 3233,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3235,
          "column": 0
        },
        "end": {
          "line": 3235,
          "column": 24
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "ID",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "unique id or name of the plugin",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "init",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "callback method to set taiko instance for plugin",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Function"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "plugins",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "plugins"
      }
    ],
    "namespace": "plugins"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Identifies an element on the page.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 35,
          "offset": 34
        }
      }
    },
    "tags": [
      {
        "title": "callback",
        "description": "selector",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "link('Sign in')\nbutton('Get Started')\n$('#id')\ntext('Home')",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Text to identify the element.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "text"
      }
    ],
    "loc": {
      "start": {
        "line": 3424,
        "column": 0
      },
      "end": {
        "line": 3435,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3527,
          "column": 0
        },
        "end": {
          "line": 3527,
          "column": 21
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "link('Sign in')\nbutton('Get Started')\n$('#id')\ntext('Home')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "text",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text to identify the element.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "selector",
    "type": {
      "type": "NameExpression",
      "name": "Function"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "selector",
        "kind": "typedef"
      }
    ],
    "namespace": "selector"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Lets you perform relative HTML element searches.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 49,
          "offset": 48
        }
      }
    },
    "tags": [
      {
        "title": "callback",
        "description": "relativeSelector",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "near('Home')\ntoLeftOf('Sign in')\ntoRightOf('Get Started')\nabove('Sign in')\nbelow('Home')\nlink('Sign In',near(\"Home\"),toLeftOf(\"Sign Out\")) - Multiple selectors can be used to perform relative search",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": "Web element selector.",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "selector"
      },
      {
        "title": "returns",
        "description": ".",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 3437,
        "column": 0
      },
      "end": {
        "line": 3451,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3527,
          "column": 0
        },
        "end": {
          "line": 3527,
          "column": 21
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "near('Home')\ntoLeftOf('Sign in')\ntoRightOf('Get Started')\nabove('Sign in')\nbelow('Home')\nlink('Sign In',near(\"Home\"),toLeftOf(\"Sign Out\")) - Multiple selectors can be used to perform relative search"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selector",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Web element selector.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "selector"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 2,
                  "offset": 1
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 2,
              "offset": 1
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "RelativeSearchElement"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "relativeSelector",
    "type": {
      "type": "NameExpression",
      "name": "Function"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "relativeSelector",
        "kind": "typedef"
      }
    ],
    "namespace": "relativeSelector"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Represents a relative HTML element search. This is returned by ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "relativeSelector",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "relativeSelector"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 1,
                  "column": 88,
                  "offset": 87
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 88,
              "offset": 87
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 88,
          "offset": 87
        }
      }
    },
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "RelativeSearchElement"
      },
      {
        "title": "example",
        "description": "above('username')\nnear('Get Started')",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 3453,
        "column": 0
      },
      "end": {
        "line": 3461,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3527,
          "column": 0
        },
        "end": {
          "line": 3527,
          "column": 21
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "above('username')\nnear('Get Started')"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "class",
    "name": "RelativeSearchElement",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "RelativeSearchElement",
        "kind": "class"
      }
    ],
    "namespace": "RelativeSearchElement"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wrapper object of all found elements. This list mimics the behaviour of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "ElementWrapper",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "ElementWrapper"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "end": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nby exposing similar methods. The call of these methods gets delegated to first element wrapper.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 95,
                  "offset": 94
                },
                "end": {
                  "line": 2,
                  "column": 96,
                  "offset": 190
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 96,
              "offset": 190
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "It exposes a method ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 192
                },
                "end": {
                  "line": 4,
                  "column": 21,
                  "offset": 212
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "elements()",
              "position": {
                "start": {
                  "line": 4,
                  "column": 21,
                  "offset": 212
                },
                "end": {
                  "line": 4,
                  "column": 33,
                  "offset": 224
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " which gives the actual list of element wrappers which can be used to loop over the elements.\nIt also exposes ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 33,
                  "offset": 224
                },
                "end": {
                  "line": 5,
                  "column": 17,
                  "offset": 334
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "element(index)",
              "position": {
                "start": {
                  "line": 5,
                  "column": 17,
                  "offset": 334
                },
                "end": {
                  "line": 5,
                  "column": 33,
                  "offset": 350
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " which gives the element wrapper for that index`.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 33,
                  "offset": 350
                },
                "end": {
                  "line": 5,
                  "column": 82,
                  "offset": 399
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 192
            },
            "end": {
              "line": 5,
              "column": 82,
              "offset": 399
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "elements()",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 402
                        },
                        "end": {
                          "line": 6,
                          "column": 15,
                          "offset": 414
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 15,
                          "offset": 414
                        },
                        "end": {
                          "line": 6,
                          "column": 17,
                          "offset": 416
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "exists()",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 17,
                          "offset": 416
                        },
                        "end": {
                          "line": 6,
                          "column": 27,
                          "offset": 426
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 27,
                          "offset": 426
                        },
                        "end": {
                          "line": 6,
                          "column": 29,
                          "offset": 428
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "description",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 29,
                          "offset": 428
                        },
                        "end": {
                          "line": 6,
                          "column": 42,
                          "offset": 441
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 42,
                          "offset": 441
                        },
                        "end": {
                          "line": 6,
                          "column": 44,
                          "offset": 443
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "text()",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 44,
                          "offset": 443
                        },
                        "end": {
                          "line": 6,
                          "column": 52,
                          "offset": 451
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " , ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 52,
                          "offset": 451
                        },
                        "end": {
                          "line": 6,
                          "column": 55,
                          "offset": 454
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "isVisible()",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 55,
                          "offset": 454
                        },
                        "end": {
                          "line": 6,
                          "column": 68,
                          "offset": 467
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 68,
                          "offset": 467
                        },
                        "end": {
                          "line": 6,
                          "column": 70,
                          "offset": 469
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "isDisabled()",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 70,
                          "offset": 469
                        },
                        "end": {
                          "line": 6,
                          "column": 84,
                          "offset": 483
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " for all the elements.\n(NOTE: ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 84,
                          "offset": 483
                        },
                        "end": {
                          "line": 7,
                          "column": 8,
                          "offset": 513
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "exists()",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 8,
                          "offset": 513
                        },
                        "end": {
                          "line": 7,
                          "column": 18,
                          "offset": 523
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " returns boolean from version ",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 18,
                          "offset": 523
                        },
                        "end": {
                          "line": 7,
                          "column": 48,
                          "offset": 553
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "0.4.0",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 48,
                          "offset": 553
                        },
                        "end": {
                          "line": 7,
                          "column": 55,
                          "offset": 560
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ")",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 55,
                          "offset": 560
                        },
                        "end": {
                          "line": 7,
                          "column": 56,
                          "offset": 561
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 3,
                      "offset": 402
                    },
                    "end": {
                      "line": 7,
                      "column": 56,
                      "offset": 561
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 400
                },
                "end": {
                  "line": 7,
                  "column": 56,
                  "offset": 561
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 400
            },
            "end": {
              "line": 7,
              "column": 56,
              "offset": 561
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 56,
          "offset": 561
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "ElementWrapperList"
      },
      {
        "title": "property",
        "description": "@private {function} get - Deprecated from version `1.0.3`. DOM element getter. Implicitly wait for the element to appears with timeout of 10 seconds.",
        "lineNumber": 10,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "null"
      },
      {
        "title": "property",
        "description": "@private {function} elements - DOM element wrapper getter. Implicitly wait for the element to appears with timeout of 10 seconds. Returns a list of element wrappers found.",
        "lineNumber": 11,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "null"
      },
      {
        "title": "property",
        "description": "Checks existence for element.  Accepts `(retryInterval, retryTimeout)` parameters (defaults to global settings).",
        "lineNumber": 12,
        "type": {
          "type": "FunctionType",
          "params": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ],
          "result": null
        },
        "name": "exists"
      },
      {
        "title": "property",
        "description": "Checks if element is visible and returns a boolean.",
        "lineNumber": 13,
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        },
        "name": "isVisible"
      },
      {
        "title": "property",
        "description": "Checks if element is disabled and returns a boolean.",
        "lineNumber": 14,
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        },
        "name": "isDisabled"
      },
      {
        "title": "property",
        "description": "Describes the operation performed.",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "description"
      },
      {
        "title": "property",
        "description": "Gives innerText of the first element found.",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "text"
      },
      {
        "title": "example",
        "description": "link('google').exists()\nlink('google').exists(1000)\nlink('google').description\n\n// To loop over all the elements\nlet elements = await $('a').elements();\nfor (element of elements) {\n   console.log(await element.text());\n}\n\ntextBox('username').value()\n(await textBox('username').elements())[0].value() # same as above\n\n$('.class').text()\n(await $('.class').elements())[0].text() # same as above\n\nlet element = await $('a').element(0);\nconsole.log(await element.text());",
        "lineNumber": 18
      }
    ],
    "loc": {
      "start": {
        "line": 3463,
        "column": 0
      },
      "end": {
        "line": 3501,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3527,
          "column": 0
        },
        "end": {
          "line": 3527,
          "column": 21
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "link('google').exists()\nlink('google').exists(1000)\nlink('google').description\n\n// To loop over all the elements\nlet elements = await $('a').elements();\nfor (element of elements) {\n   console.log(await element.text());\n}\n\ntextBox('username').value()\n(await textBox('username').elements())[0].value() # same as above\n\n$('.class').text()\n(await $('.class').elements())[0].text() # same as above\n\nlet element = await $('a').element(0);\nconsole.log(await element.text());"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "exists",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks existence for element.  Accepts ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "(retryInterval, retryTimeout)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 71,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " parameters (defaults to global settings).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 71,
                      "offset": 70
                    },
                    "end": {
                      "line": 1,
                      "column": 113,
                      "offset": 112
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 113,
                  "offset": 112
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 113,
              "offset": 112
            }
          }
        },
        "type": {
          "type": "FunctionType",
          "params": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ],
          "result": null
        }
      },
      {
        "title": "property",
        "name": "isVisible",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks if element is visible and returns a boolean.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        }
      },
      {
        "title": "property",
        "name": "isDisabled",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks if element is disabled and returns a boolean.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        }
      },
      {
        "title": "property",
        "name": "description",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Describes the operation performed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "text",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Gives innerText of the first element found.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "ElementWrapperList",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ElementWrapperList",
        "kind": "typedef"
      }
    ],
    "namespace": "ElementWrapperList"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wrapper object for the element present on the web page. Extra methods are available based on the element type.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 111,
                  "offset": 110
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 111,
              "offset": 110
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "(NOTE: ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 112
                },
                "end": {
                  "line": 3,
                  "column": 8,
                  "offset": 119
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "exists()",
              "position": {
                "start": {
                  "line": 3,
                  "column": 8,
                  "offset": 119
                },
                "end": {
                  "line": 3,
                  "column": 18,
                  "offset": 129
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " returns boolean from version ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 18,
                  "offset": 129
                },
                "end": {
                  "line": 3,
                  "column": 48,
                  "offset": 159
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "0.4.0",
              "position": {
                "start": {
                  "line": 3,
                  "column": 48,
                  "offset": 159
                },
                "end": {
                  "line": 3,
                  "column": 55,
                  "offset": 166
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")",
              "position": {
                "start": {
                  "line": 3,
                  "column": 55,
                  "offset": 166
                },
                "end": {
                  "line": 3,
                  "column": 56,
                  "offset": 167
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 112
            },
            "end": {
              "line": 3,
              "column": 56,
              "offset": 167
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "value()",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 170
                        },
                        "end": {
                          "line": 4,
                          "column": 12,
                          "offset": 179
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " for input field, fileField and text field.",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 12,
                          "offset": 179
                        },
                        "end": {
                          "line": 4,
                          "column": 55,
                          "offset": 222
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 3,
                      "offset": 170
                    },
                    "end": {
                      "line": 4,
                      "column": 55,
                      "offset": 222
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 168
                },
                "end": {
                  "line": 4,
                  "column": 55,
                  "offset": 222
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "value()",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 225
                        },
                        "end": {
                          "line": 5,
                          "column": 12,
                          "offset": 234
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 12,
                          "offset": 234
                        },
                        "end": {
                          "line": 5,
                          "column": 14,
                          "offset": 236
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "select()",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 14,
                          "offset": 236
                        },
                        "end": {
                          "line": 5,
                          "column": 24,
                          "offset": 246
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " for dropDown.",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 24,
                          "offset": 246
                        },
                        "end": {
                          "line": 5,
                          "column": 38,
                          "offset": 260
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 3,
                      "offset": 225
                    },
                    "end": {
                      "line": 5,
                      "column": 38,
                      "offset": 260
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 223
                },
                "end": {
                  "line": 5,
                  "column": 38,
                  "offset": 260
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "value()",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 263
                        },
                        "end": {
                          "line": 6,
                          "column": 12,
                          "offset": 272
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 12,
                          "offset": 272
                        },
                        "end": {
                          "line": 6,
                          "column": 14,
                          "offset": 274
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "select()",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 14,
                          "offset": 274
                        },
                        "end": {
                          "line": 6,
                          "column": 24,
                          "offset": 284
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " for timeField.",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 24,
                          "offset": 284
                        },
                        "end": {
                          "line": 6,
                          "column": 39,
                          "offset": 299
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 3,
                      "offset": 263
                    },
                    "end": {
                      "line": 6,
                      "column": 39,
                      "offset": 299
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 261
                },
                "end": {
                  "line": 6,
                  "column": 39,
                  "offset": 299
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "check()",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 3,
                          "offset": 302
                        },
                        "end": {
                          "line": 7,
                          "column": 12,
                          "offset": 311
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 12,
                          "offset": 311
                        },
                        "end": {
                          "line": 7,
                          "column": 14,
                          "offset": 313
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "uncheck()",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 14,
                          "offset": 313
                        },
                        "end": {
                          "line": 7,
                          "column": 25,
                          "offset": 324
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 25,
                          "offset": 324
                        },
                        "end": {
                          "line": 7,
                          "column": 27,
                          "offset": 326
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "isChecked()",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 27,
                          "offset": 326
                        },
                        "end": {
                          "line": 7,
                          "column": 40,
                          "offset": 339
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " for checkbox.",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 40,
                          "offset": 339
                        },
                        "end": {
                          "line": 7,
                          "column": 54,
                          "offset": 353
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 3,
                      "offset": 302
                    },
                    "end": {
                      "line": 7,
                      "column": 54,
                      "offset": 353
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 300
                },
                "end": {
                  "line": 7,
                  "column": 54,
                  "offset": 353
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "select()",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 3,
                          "offset": 356
                        },
                        "end": {
                          "line": 8,
                          "column": 13,
                          "offset": 366
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 13,
                          "offset": 366
                        },
                        "end": {
                          "line": 8,
                          "column": 15,
                          "offset": 368
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "deselect()",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 15,
                          "offset": 368
                        },
                        "end": {
                          "line": 8,
                          "column": 27,
                          "offset": 380
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 27,
                          "offset": 380
                        },
                        "end": {
                          "line": 8,
                          "column": 29,
                          "offset": 382
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "isSelected()",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 29,
                          "offset": 382
                        },
                        "end": {
                          "line": 8,
                          "column": 43,
                          "offset": 396
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " for radio button.",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 43,
                          "offset": 396
                        },
                        "end": {
                          "line": 8,
                          "column": 61,
                          "offset": 414
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 3,
                      "offset": 356
                    },
                    "end": {
                      "line": 8,
                      "column": 61,
                      "offset": 414
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 354
                },
                "end": {
                  "line": 8,
                  "column": 61,
                  "offset": 414
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 168
            },
            "end": {
              "line": 8,
              "column": 61,
              "offset": 414
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 8,
          "column": 61,
          "offset": 414
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "ElementWrapper"
      },
      {
        "title": "property",
        "description": "Checks existence for element.  Accepts `(retryInterval, retryTimeout)` parameters (defaults to global settings).",
        "lineNumber": 11,
        "type": {
          "type": "FunctionType",
          "params": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ],
          "result": null
        },
        "name": "exists"
      },
      {
        "title": "property",
        "description": "Checks if element is visible and returns a boolean.",
        "lineNumber": 12,
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        },
        "name": "isVisible"
      },
      {
        "title": "property",
        "description": "Checks if element is disabled and returns a boolean.",
        "lineNumber": 13,
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        },
        "name": "isDisabled"
      },
      {
        "title": "property",
        "description": "Describes the operation performed.",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "description"
      },
      {
        "title": "property",
        "description": "Gives innerText of the first element found.",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "text"
      },
      {
        "title": "example",
        "description": "link('google').exists()\nlink('google').exists(1000)\nlink('google').description",
        "lineNumber": 17
      }
    ],
    "loc": {
      "start": {
        "line": 3503,
        "column": 0
      },
      "end": {
        "line": 3525,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 3527,
          "column": 0
        },
        "end": {
          "line": 3527,
          "column": 21
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/taiko.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "link('google').exists()\nlink('google').exists(1000)\nlink('google').description"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "exists",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks existence for element.  Accepts ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "(retryInterval, retryTimeout)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 71,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " parameters (defaults to global settings).",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 71,
                      "offset": 70
                    },
                    "end": {
                      "line": 1,
                      "column": 113,
                      "offset": 112
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 113,
                  "offset": 112
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 113,
              "offset": 112
            }
          }
        },
        "type": {
          "type": "FunctionType",
          "params": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ],
          "result": null
        }
      },
      {
        "title": "property",
        "name": "isVisible",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks if element is visible and returns a boolean.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            }
          }
        },
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        }
      },
      {
        "title": "property",
        "name": "isDisabled",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks if element is disabled and returns a boolean.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": null
        }
      },
      {
        "title": "property",
        "name": "description",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Describes the operation performed.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "text",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Gives innerText of the first element found.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "String"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "ElementWrapper",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ElementWrapper",
        "kind": "typedef"
      }
    ],
    "namespace": "ElementWrapper"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Copyright 2018 Thoughtworks Inc. All rights reserved.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 5,
                  "column": 40,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 5,
              "column": 40,
              "offset": 223
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "http://www.apache.org/licenses/LICENSE-2.0",
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 225
            },
            "end": {
              "line": 7,
              "column": 47,
              "offset": 271
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 273
                },
                "end": {
                  "line": 13,
                  "column": 31,
                  "offset": 578
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 273
            },
            "end": {
              "line": 13,
              "column": 31,
              "offset": 578
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 31,
          "offset": 578
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 25
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/helper.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "fs",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "fs",
        "kind": "constant"
      }
    ],
    "namespace": "fs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This module is imported from Puppeteer(",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/GoogleChrome/puppeteer",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/GoogleChrome/puppeteer",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")\nFew modifications are done on the file.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 2,
                  "column": 40,
                  "offset": 121
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 40,
              "offset": 121
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 40,
          "offset": 121
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 25
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/helper.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "fs",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "fs",
        "kind": "constant"
      }
    ],
    "namespace": "fs"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "return",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 30,
        "column": 2
      },
      "end": {
        "line": 32,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 33,
          "column": 2
        },
        "end": {
          "line": 40,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/helper.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "projectRoot",
    "kind": "function",
    "memberof": "Helper",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "projectRoot",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".projectRoot"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "AllLiteral"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "message"
      }
    ],
    "loc": {
      "start": {
        "line": 73,
        "column": 0
      },
      "end": {
        "line": 76,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 77,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 1
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/helper.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 1,
        "type": {
          "type": "AllLiteral"
        }
      },
      {
        "title": "param",
        "name": "message",
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "assert",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "assert",
        "kind": "function"
      }
    ],
    "namespace": "assert"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Copyright 2018 Thoughtworks Inc. All rights reserved.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 5,
                  "column": 40,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 5,
              "column": 40,
              "offset": 223
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "http://www.apache.org/licenses/LICENSE-2.0",
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 225
            },
            "end": {
              "line": 7,
              "column": 47,
              "offset": 271
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 273
                },
                "end": {
                  "line": 13,
                  "column": 31,
                  "offset": 578
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 273
            },
            "end": {
              "line": 13,
              "column": 31,
              "offset": 578
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 31,
          "offset": 578
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 59
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/handlers/inputHandler.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "keyDefinitions",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "keyDefinitions",
        "kind": "constant"
      }
    ],
    "namespace": "keyDefinitions"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This module is imported from Puppeteer(",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/GoogleChrome/puppeteer",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/GoogleChrome/puppeteer",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")\nFew modifications are done on the file.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 2,
                  "column": 40,
                  "offset": 121
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 40,
              "offset": 121
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 40,
          "offset": 121
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 59
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/handlers/inputHandler.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "keyDefinitions",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "keyDefinitions",
        "kind": "constant"
      }
    ],
    "namespace": "keyDefinitions"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Copyright 2018 Thoughtworks Inc. All rights reserved.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 5,
                  "column": 40,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 5,
              "column": 40,
              "offset": 223
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "http://www.apache.org/licenses/LICENSE-2.0",
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 225
            },
            "end": {
              "line": 7,
              "column": 47,
              "offset": 271
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 273
                },
                "end": {
                  "line": 13,
                  "column": 31,
                  "offset": 578
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 273
            },
            "end": {
              "line": 13,
              "column": 31,
              "offset": 578
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 31,
          "offset": 578
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 48
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/handlers/domHandler.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "require",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "require",
        "kind": "constant"
      }
    ],
    "namespace": "require"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This module consists of functions imported from Puppeteer(",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/GoogleChrome/puppeteer",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/GoogleChrome/puppeteer",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "end": {
                      "line": 1,
                      "column": 100,
                      "offset": 99
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")",
              "position": {
                "start": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 101,
              "offset": 100
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 101,
          "offset": 100
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 48
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/handlers/domHandler.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "require",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "require",
        "kind": "constant"
      }
    ],
    "namespace": "require"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Copyright 2018 Thoughtworks Inc. All rights reserved.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 5,
                  "column": 40,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 5,
              "column": 40,
              "offset": 223
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "http://www.apache.org/licenses/LICENSE-2.0",
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 225
            },
            "end": {
              "line": 7,
              "column": 47,
              "offset": 271
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 273
                },
                "end": {
                  "line": 13,
                  "column": 31,
                  "offset": 578
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 273
            },
            "end": {
              "line": 13,
              "column": 31,
              "offset": 578
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 31,
          "offset": 578
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 48
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/handlers/overlayHandler.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "require",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "require",
        "kind": "constant"
      }
    ],
    "namespace": "require"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This module consists of functions imported from Puppeteer(",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/GoogleChrome/puppeteer",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/GoogleChrome/puppeteer",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "end": {
                      "line": 1,
                      "column": 100,
                      "offset": 99
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "end": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")",
              "position": {
                "start": {
                  "line": 1,
                  "column": 100,
                  "offset": 99
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 101,
              "offset": 100
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 101,
          "offset": 100
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 48
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/handlers/overlayHandler.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "require",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "require",
        "kind": "constant"
      }
    ],
    "namespace": "require"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Copyright 2018 Thoughtworks Inc. All rights reserved.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 5,
                  "column": 40,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 5,
              "column": 40,
              "offset": 223
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "http://www.apache.org/licenses/LICENSE-2.0",
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 225
            },
            "end": {
              "line": 7,
              "column": 47,
              "offset": 271
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 273
                },
                "end": {
                  "line": 13,
                  "column": 31,
                  "offset": 578
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 273
            },
            "end": {
              "line": 13,
              "column": 31,
              "offset": 578
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 31,
          "offset": 578
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 490,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/data/USKeyboardLayout.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "USKeyboardLayout",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "USKeyboardLayout"
      }
    ],
    "namespace": "USKeyboardLayout"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This module is imported from Puppeteer(",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/GoogleChrome/puppeteer",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/GoogleChrome/puppeteer",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")\nFew modifications are done on the file.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 2,
                  "column": 40,
                  "offset": 121
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 40,
              "offset": 121
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 40,
          "offset": 121
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 490,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/data/USKeyboardLayout.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "USKeyboardLayout",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "USKeyboardLayout"
      }
    ],
    "namespace": "USKeyboardLayout"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "KeyDefinition"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 33,
        "column": 0
      },
      "end": {
        "line": 35,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 490,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/data/USKeyboardLayout.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "TypeApplication",
      "expression": {
        "type": "NameExpression",
        "name": "Object"
      },
      "applications": [
        {
          "type": "NameExpression",
          "name": "string"
        },
        {
          "type": "NameExpression",
          "name": "KeyDefinition"
        }
      ]
    },
    "name": "USKeyboardLayout",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "USKeyboardLayout"
      }
    ],
    "namespace": "USKeyboardLayout"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "KeyDefinition"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "keyCode"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "shiftKeyCode"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "key"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "shiftKey"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "code"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "text"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "shiftText"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "location"
      }
    ],
    "loc": {
      "start": {
        "line": 21,
        "column": 0
      },
      "end": {
        "line": 31,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 490,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/data/USKeyboardLayout.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "keyCode",
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "shiftKeyCode",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "key",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "shiftKey",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "code",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "text",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "shiftText",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "location",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "KeyDefinition",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "KeyDefinition",
        "kind": "typedef"
      }
    ],
    "namespace": "KeyDefinition"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Copyright 2018 Thoughtworks Inc. All rights reserved.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 5,
                  "column": 40,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 5,
              "column": 40,
              "offset": 223
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "http://www.apache.org/licenses/LICENSE-2.0",
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 225
            },
            "end": {
              "line": 7,
              "column": 47,
              "offset": 271
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 273
                },
                "end": {
                  "line": 13,
                  "column": 31,
                  "offset": 578
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 273
            },
            "end": {
              "line": 13,
              "column": 31,
              "offset": 578
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 31,
          "offset": 578
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 25
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "os",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "os",
        "kind": "constant"
      }
    ],
    "namespace": "os"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This module is imported from Puppeteer(",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/GoogleChrome/puppeteer",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/GoogleChrome/puppeteer",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")\nFew modifications are done on the file.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 2,
                  "column": 40,
                  "offset": 121
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 40,
              "offset": 121
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 40,
          "offset": 121
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 25
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "os",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "os",
        "kind": "constant"
      }
    ],
    "namespace": "os"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NonNullableType",
            "expression": {
              "type": "NameExpression",
              "name": "BrowserFetcher.Options"
            },
            "prefix": true
          }
        },
        "name": "options"
      }
    ],
    "loc": {
      "start": {
        "line": 74,
        "column": 2
      },
      "end": {
        "line": 76,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 77,
          "column": 2
        },
        "end": {
          "line": 93,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 1,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NonNullableType",
            "expression": {
              "type": "NameExpression",
              "name": "BrowserFetcher.Options"
            },
            "prefix": true
          }
        },
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "constructor",
    "kind": "function",
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "constructor",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#constructor"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "return",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 95,
        "column": 2
      },
      "end": {
        "line": 97,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 98,
          "column": 2
        },
        "end": {
          "line": 100,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "platform",
    "kind": "function",
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "platform",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#platform"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "revision"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "boolean"
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 102,
        "column": 2
      },
      "end": {
        "line": 105,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 106,
          "column": 2
        },
        "end": {
          "line": 119,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "revision",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "platform",
        "lineNumber": 106
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "boolean"
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "canDownload",
    "kind": "function",
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "canDownload",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#canDownload"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "revision"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "FunctionType",
            "params": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ],
            "result": null
          },
          "prefix": true
        },
        "name": "progressCallback"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NonNullableType",
                "expression": {
                  "type": "NameExpression",
                  "name": "BrowserFetcher.RevisionInfo"
                },
                "prefix": true
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 121,
        "column": 2
      },
      "end": {
        "line": 125,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 126,
          "column": 2
        },
        "end": {
          "line": 149,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "revision",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "progressCallback",
        "lineNumber": 2,
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "FunctionType",
            "params": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ],
            "result": null
          },
          "prefix": true
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NonNullableType",
                "expression": {
                  "type": "NameExpression",
                  "name": "BrowserFetcher.RevisionInfo"
                },
                "prefix": true
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "download",
    "kind": "function",
    "async": true,
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "download",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#download"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "return",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NonNullableType",
                "expression": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  ]
                },
                "prefix": true
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 151,
        "column": 2
      },
      "end": {
        "line": 153,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 154,
          "column": 2
        },
        "end": {
          "line": 163,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NonNullableType",
                "expression": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  ]
                },
                "prefix": true
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "localRevisions",
    "kind": "function",
    "async": true,
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "localRevisions",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#localRevisions"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "revision"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 165,
        "column": 2
      },
      "end": {
        "line": 168,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 169,
          "column": 2
        },
        "end": {
          "line": 176,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "revision",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "remove",
    "kind": "function",
    "async": true,
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "remove",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#remove"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "revision"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "NameExpression",
            "name": "BrowserFetcher.RevisionInfo"
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 178,
        "column": 2
      },
      "end": {
        "line": 181,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 182,
          "column": 2
        },
        "end": {
          "line": 204,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "revision",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "NameExpression",
            "name": "BrowserFetcher.RevisionInfo"
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "revisionInfo",
    "kind": "function",
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "revisionInfo",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#revisionInfo"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "revision"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 291,
        "column": 2
      },
      "end": {
        "line": 294,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 295,
          "column": 2
        },
        "end": {
          "line": 297,
          "column": 3
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "revision",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "_getFolderPath",
    "kind": "function",
    "memberof": "BrowserFetcher",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "_getFolderPath",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#_getFolderPath"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NonNullableType",
            "expression": {
              "type": "NameExpression",
              "name": "Error"
            },
            "prefix": true
          }
        },
        "name": "error"
      }
    ],
    "loc": {
      "start": {
        "line": 247,
        "column": 6
      },
      "end": {
        "line": 249,
        "column": 9
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 250,
          "column": 6
        },
        "end": {
          "line": 257,
          "column": 7
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "error",
        "lineNumber": 1,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NonNullableType",
            "expression": {
              "type": "NameExpression",
              "name": "Error"
            },
            "prefix": true
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "onClose",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "onClose",
        "kind": "function"
      }
    ],
    "namespace": "onClose"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "line"
      }
    ],
    "loc": {
      "start": {
        "line": 264,
        "column": 6
      },
      "end": {
        "line": 266,
        "column": 9
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 267,
          "column": 6
        },
        "end": {
          "line": 280,
          "column": 7
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "line",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "onLine",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "onLine",
        "kind": "function"
      }
    ],
    "namespace": "onLine"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "folderPath"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "RecordType",
            "fields": [
              {
                "type": "FieldType",
                "key": "platform",
                "value": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "type": "FieldType",
                "key": "revision",
                "value": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 303,
        "column": 0
      },
      "end": {
        "line": 306,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 307,
          "column": 0
        },
        "end": {
          "line": 318,
          "column": 1
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "folderPath",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "RecordType",
            "fields": [
              {
                "type": "FieldType",
                "key": "platform",
                "value": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "type": "FieldType",
                "key": "revision",
                "value": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "parseFolderPath",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "parseFolderPath",
        "kind": "function"
      }
    ],
    "namespace": "parseFolderPath"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "destinationPath"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "FunctionType",
            "params": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ],
            "result": null
          },
          "prefix": true
        },
        "name": "progressCallback"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 320,
        "column": 0
      },
      "end": {
        "line": 325,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 326,
          "column": 0
        },
        "end": {
          "line": 362,
          "column": 1
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "url",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "destinationPath",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "progressCallback",
        "lineNumber": 3,
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "FunctionType",
            "params": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ],
            "result": null
          },
          "prefix": true
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "downloadFile",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "downloadFile",
        "kind": "function"
      }
    ],
    "namespace": "downloadFile"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 0,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 350,
        "column": 26
      },
      "end": {
        "line": 350,
        "column": 47
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 350,
          "column": 49
        },
        "end": {
          "line": 350,
          "column": 83
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "NameExpression",
      "name": "string"
    },
    "name": "headers",
    "memberof": "response",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "headers",
        "scope": "static"
      }
    ],
    "namespace": ".headers"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "zipPath"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "folderPath"
      },
      {
        "title": "return",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NullableType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Error"
                },
                "prefix": true
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "loc": {
      "start": {
        "line": 364,
        "column": 0
      },
      "end": {
        "line": 368,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 369,
          "column": 0
        },
        "end": {
          "line": 371,
          "column": 1
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "zipPath",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "folderPath",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NonNullableType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Promise"
            },
            "applications": [
              {
                "type": "NullableType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Error"
                },
                "prefix": true
              }
            ]
          },
          "prefix": true
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "extractZip",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "extractZip",
        "kind": "function"
      }
    ],
    "namespace": "extractZip"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "BrowserFetcher.Options"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "platform"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "path"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "host"
      }
    ],
    "loc": {
      "start": {
        "line": 400,
        "column": 0
      },
      "end": {
        "line": 405,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 373,
          "column": 0
        },
        "end": {
          "line": 398,
          "column": 1
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "platform",
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "path",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "host",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "BrowserFetcher.Options",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BrowserFetcher.Options",
        "kind": "typedef"
      }
    ],
    "namespace": "BrowserFetcher.Options"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "BrowserFetcher.RevisionInfo"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "folderPath"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "executablePath"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "url"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "local"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "revision"
      }
    ],
    "loc": {
      "start": {
        "line": 407,
        "column": 0
      },
      "end": {
        "line": 414,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 373,
          "column": 0
        },
        "end": {
          "line": 398,
          "column": 1
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "folderPath",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "executablePath",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "url",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "local",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      },
      {
        "title": "property",
        "name": "revision",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "BrowserFetcher.RevisionInfo",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "BrowserFetcher.RevisionInfo",
        "kind": "typedef"
      }
    ],
    "namespace": "BrowserFetcher.RevisionInfo"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 0,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 374,
        "column": 2
      },
      "end": {
        "line": 374,
        "column": 23
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 375,
          "column": 2
        },
        "end": {
          "line": 375,
          "column": 33
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "name": "options",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "options",
        "kind": "constant"
      }
    ],
    "namespace": "options"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 0,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 380,
        "column": 4
      },
      "end": {
        "line": 380,
        "column": 25
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 381,
          "column": 4
        },
        "end": {
          "line": 381,
          "column": 47
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/browserFetcher.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "name": "parsedProxyURL",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "parsedProxyURL",
        "kind": "constant"
      }
    ],
    "namespace": "parsedProxyURL"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Copyright 2018 Thoughtworks Inc. All rights reserved.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 5,
                  "column": 40,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 5,
              "column": 40,
              "offset": 223
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "http://www.apache.org/licenses/LICENSE-2.0",
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 225
            },
            "end": {
              "line": 7,
              "column": 47,
              "offset": 271
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 273
                },
                "end": {
                  "line": 13,
                  "column": 31,
                  "offset": 578
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 273
            },
            "end": {
              "line": 13,
              "column": 31,
              "offset": 578
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 31,
          "offset": 578
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 826,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/data/devices.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "DEVICES",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DEVICES"
      }
    ],
    "namespace": "DEVICES"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This module is imported from Puppeteer(",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/GoogleChrome/puppeteer",
              "children": [
                {
                  "type": "text",
                  "value": "https://github.com/GoogleChrome/puppeteer",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 81,
                      "offset": 80
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "end": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ")\nFew modifications are done on the file.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 81,
                  "offset": 80
                },
                "end": {
                  "line": 2,
                  "column": 40,
                  "offset": 121
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 40,
              "offset": 121
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 40,
          "offset": 121
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 826,
          "column": 2
        }
      },
      "file": "/home/fallenmax/code/github/taiko/lib/data/devices.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "DEVICES",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DEVICES"
      }
    ],
    "namespace": "DEVICES"
  }
]